{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "animated-card-3",
  "type": "registry:ui",
  "title": "Animated Card 3",
  "description": "An animated hover card that can showcase almost anythingâ€”it all comes down to the caption you choose.",
  "files": [
    {
      "path": "registry/components/animated-cards/animated-card.tsx",
      "content": "import * as React from \"react\";\r\nimport { cn } from \"@/lib/utils\";\r\n\r\ninterface CardProps extends React.HTMLAttributes<HTMLDivElement> {}\r\n\r\nexport function AnimatedCard({ className, ...props }: CardProps) {\r\n  return (\r\n    <div\r\n      role=\"region\"\r\n      aria-labelledby=\"card-title\"\r\n      aria-describedby=\"card-description\"\r\n      className={cn(\r\n        \"relative rounded-xl w-[356px] border overflow-hidden group/animated-card dark:border-zinc-900 border-zinc-200 dark:bg-black bg-white shadow-sm\",\r\n        className,\r\n      )}\r\n      {...props}\r\n    />\r\n  );\r\n}\r\n\r\nexport function CardBody({ className, ...props }: CardProps) {\r\n  return (\r\n    <div\r\n      role=\"group\"\r\n      className={cn(\r\n        \"flex flex-col space-y-1.5 p-4 border-t dark:border-zinc-900 border-zinc-200\",\r\n        className,\r\n      )}\r\n      {...props}\r\n    />\r\n  );\r\n}\r\n\r\ninterface CardTitleProps extends React.HTMLAttributes<HTMLHeadingElement> {}\r\n\r\nexport function CardTitle({ className, ...props }: CardTitleProps) {\r\n  return (\r\n    <h3\r\n      className={cn(\r\n        \"text-lg dark:text-white text-black font-semibold leading-none tracking-tight\",\r\n        className,\r\n      )}\r\n      {...props}\r\n    />\r\n  );\r\n}\r\n\r\ninterface CardDescriptionProps\r\n  extends React.HTMLAttributes<HTMLParagraphElement> {}\r\n\r\nexport function CardDescription({ className, ...props }: CardDescriptionProps) {\r\n  return (\r\n    <p\r\n      className={cn(\r\n        \"text-sm text-neutral-500 dark:text-neutral-400\",\r\n        className,\r\n      )}\r\n      {...props}\r\n    />\r\n  );\r\n}\r\n\r\nexport function CardVisual({ className, ...props }: CardProps) {\r\n  return (\r\n    <div\r\n      className={cn(\"overflow-hidden w-[356px] h-[180px] \", className)}\r\n      {...props}\r\n    />\r\n  );\r\n}\r\n",
      "type": "registry:ui"
    },
    {
      "path": "registry/components/animated-cards/visual-3.tsx",
      "content": "\"use client\";\r\n\r\nimport * as React from \"react\";\r\nimport { useState } from \"react\";\r\n\r\ninterface Visual3Props {\r\n  mainColor?: string;\r\n  secondaryColor?: string;\r\n  gridColor?: string;\r\n}\r\n\r\nexport function Visual3({\r\n  mainColor = \"#8b5cf6\",\r\n  secondaryColor = \"#fbbf24\",\r\n  gridColor = \"#80808015\",\r\n}: Visual3Props) {\r\n  const [hovered, setHovered] = useState(false);\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        className=\"inset-0 absolute z-20\"\r\n        onMouseEnter={() => setHovered(true)}\r\n        onMouseLeave={() => setHovered(false)}\r\n        style={\r\n          {\r\n            \"--color\": mainColor,\r\n            \"--secondary-color\": secondaryColor,\r\n          } as React.CSSProperties\r\n        }\r\n      />\r\n\r\n      <div className=\"w-[356px] h-[180px] rounded-t-lg relative overflow-hidden\">\r\n        <Layer4\r\n          color={mainColor}\r\n          secondaryColor={secondaryColor}\r\n          hovered={hovered}\r\n        />\r\n        <Layer3 color={mainColor} />\r\n        <Layer2 color={mainColor} />\r\n        <Layer1 color={mainColor} secondaryColor={secondaryColor} />\r\n        <EllipseGradient color={mainColor} />\r\n        <GridLayer color={gridColor} />\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\ninterface LayerProps {\r\n  color: string;\r\n  secondaryColor?: string;\r\n  hovered?: boolean;\r\n}\r\n\r\nconst GridLayer: React.FC<{ color: string }> = ({ color }) => {\r\n  return (\r\n    <div\r\n      style={{ \"--grid-color\": color } as React.CSSProperties}\r\n      className=\"absolute z-[4] inset-0 h-full w-full bg-transparent bg-[linear-gradient(to_right,var(--grid-color)_1px,transparent_1px),linear-gradient(to_bottom,var(--grid-color)_1px,transparent_1px)] bg-[size:20px_20px] pointer-events-none bg-center [mask-image:radial-gradient(ellipse_50%_50%_at_50%_50%,#000_60%,transparent_100%)] opacity-70\"\r\n    />\r\n  );\r\n};\r\n\r\nconst EllipseGradient: React.FC<{ color: string }> = ({ color }) => {\r\n  return (\r\n    <div className=\"w-full h-full z-[5] absolute inset-0 flex items-center justify-center\">\r\n      <svg\r\n        width=\"356\"\r\n        height=\"196\"\r\n        viewBox=\"0 0 356 180\"\r\n        fill=\"none\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n      >\r\n        <rect width=\"356\" height=\"180\" fill=\"url(#paint0_radial_12_207)\" />\r\n        <defs>\r\n          <radialGradient\r\n            id=\"paint0_radial_12_207\"\r\n            cx=\"0\"\r\n            cy=\"0\"\r\n            r=\"1\"\r\n            gradientUnits=\"userSpaceOnUse\"\r\n            gradientTransform=\"translate(178 98) rotate(90) scale(98 178)\"\r\n          >\r\n            <stop stopColor={color} stopOpacity=\"0.25\" />\r\n            <stop offset=\"0.34\" stopColor={color} stopOpacity=\"0.15\" />\r\n            <stop offset=\"1\" stopOpacity=\"0\" />\r\n          </radialGradient>\r\n        </defs>\r\n      </svg>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Layer3: React.FC<{ color: string }> = ({ color }) => {\r\n  return (\r\n    <div className=\" inset-0 absolute z-[6] translate-y-full opacity-0 group-hover/animated-card:translate-y-0 group-hover/animated-card:opacity-100 transition-all duration-500 ease-[cubic-bezier(0.6, 0.6, 0, 1)] flex items-center justify-center\">\r\n      <svg\r\n        width=\"356\"\r\n        height=\"180\"\r\n        viewBox=\"0 0 356 180\"\r\n        fill=\"none\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n      >\r\n        <rect width=\"356\" height=\"180\" fill=\"url(#paint0_linear_29_3)\" />\r\n        <defs>\r\n          <linearGradient\r\n            id=\"paint0_linear_29_3\"\r\n            x1=\"178\"\r\n            y1=\"0\"\r\n            x2=\"178\"\r\n            y2=\"180\"\r\n            gradientUnits=\"userSpaceOnUse\"\r\n          >\r\n            <stop offset=\"0.35\" stopColor={color} stopOpacity=\"0\" />\r\n            <stop offset=\"1\" stopColor={color} stopOpacity=\"0.3\" />\r\n          </linearGradient>\r\n        </defs>\r\n      </svg>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Layer1: React.FC<LayerProps> = ({ color, secondaryColor }) => {\r\n  return (\r\n    <div\r\n      className=\"absolute left-4 top-4 z-[8] flex items-center gap-1\"\r\n      style={\r\n        {\r\n          \"--color\": color,\r\n          \"--secondary-color\": secondaryColor,\r\n        } as React.CSSProperties\r\n      }\r\n    >\r\n      <div className=\"rounded-full flex items-center dark:bg-black/25 bg-white/25 backdrop-blur-sm py-0.5 px-1.5 shrink-0 transition-opacity duration-300 ease-in-out group-hover/animated-card:opacity-0 border dark:border-zinc-800 border-zinc-200\">\r\n        <div className=\"h-1.5 w-1.5 bg-[var(--color)] rounded-full \" />\r\n        <span className=\"text-[10px] ml-1 dark:text-white text-black\">\r\n          +15,2%\r\n        </span>\r\n      </div>\r\n      <div className=\"rounded-full flex items-center py-0.5 px-1.5 shrink-0 transition-opacity duration-300 ease-in-out group-hover/animated-card:opacity-0 dark:bg-black/25 bg-white/25 backdrop-blur-sm border dark:border-zinc-800 border-zinc-200 \">\r\n        <div className=\"h-1.5 w-1.5 bg-[var(--secondary-color)] rounded-full \" />\r\n        <span className=\"text-[10px] ml-1 dark:text-white text-black\">\r\n          +18,7%\r\n        </span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Layer2: React.FC<{ color: string }> = ({ color }) => {\r\n  return (\r\n    <div\r\n      className=\"relative w-[356px] h-full group\"\r\n      style={{ \"--color\": color } as React.CSSProperties}\r\n    >\r\n      <div className=\"bg-transparent absolute inset-0 w-[356px] translate-y-full transition-transform duration-500 ease-[cubic-bezier(0.6, 0.6, 0, 1)] group-hover/animated-card:translate-y-0 z-[7] flex p-4 items-start justify-center\">\r\n        <div className=\"border dark:border-zinc-800 border-zinc-200 rounded-md p-1.5 backdrop-blur-sm opacity-0 transition-opacity duration-500 ease-[cubic-bezier(0.6, 0, 1)] group-hover/animated-card:opacity-100 dark:bg-black/25 bg-white/25\">\r\n          <div className=\"flex gap-2 items-center\">\r\n            <div className=\"h-2 w-2 bg-[var(--color)] rounded-full shrink-0\" />\r\n            <p className=\"dark:text-white text-black text-xs\">\r\n              Random Data Visualization\r\n            </p>\r\n          </div>\r\n          <p className=\"text-neutral-500 dark:text-neutral-400 text-xs\">\r\n            Displaying some interesting stats.\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Layer4: React.FC<LayerProps> = ({ color, secondaryColor, hovered }) => {\r\n  const rectsData = [\r\n    {\r\n      width: 15,\r\n      height: 20,\r\n      y: 110,\r\n      hoverHeight: 20,\r\n      hoverY: 130,\r\n      x: 40,\r\n      fill: \"currentColor\",\r\n      hoverFill: secondaryColor,\r\n    },\r\n    {\r\n      width: 15,\r\n      height: 20,\r\n      y: 90,\r\n      hoverHeight: 20,\r\n      hoverY: 130,\r\n      x: 60,\r\n      fill: color,\r\n      hoverFill: color,\r\n    },\r\n    {\r\n      width: 15,\r\n      height: 40,\r\n      y: 70,\r\n      hoverHeight: 30,\r\n      hoverY: 120,\r\n      x: 80,\r\n      fill: color,\r\n      hoverFill: color,\r\n    },\r\n    {\r\n      width: 15,\r\n      height: 30,\r\n      y: 80,\r\n      hoverHeight: 50,\r\n      hoverY: 100,\r\n      x: 100,\r\n      fill: color,\r\n      hoverFill: color,\r\n    },\r\n    {\r\n      width: 15,\r\n      height: 30,\r\n      y: 110,\r\n      hoverHeight: 40,\r\n      hoverY: 110,\r\n      x: 120,\r\n      fill: \"currentColor\",\r\n      hoverFill: secondaryColor,\r\n    },\r\n    {\r\n      width: 15,\r\n      height: 50,\r\n      y: 110,\r\n      hoverHeight: 20,\r\n      hoverY: 130,\r\n      x: 140,\r\n      fill: \"currentColor\",\r\n      hoverFill: secondaryColor,\r\n    },\r\n    {\r\n      width: 15,\r\n      height: 50,\r\n      y: 60,\r\n      hoverHeight: 30,\r\n      hoverY: 120,\r\n      x: 160,\r\n      fill: color,\r\n      hoverFill: color,\r\n    },\r\n    {\r\n      width: 15,\r\n      height: 30,\r\n      y: 80,\r\n      hoverHeight: 20,\r\n      hoverY: 130,\r\n      x: 180,\r\n      fill: color,\r\n      hoverFill: color,\r\n    },\r\n    {\r\n      width: 15,\r\n      height: 20,\r\n      y: 110,\r\n      hoverHeight: 40,\r\n      hoverY: 110,\r\n      x: 200,\r\n      fill: \"currentColor\",\r\n      hoverFill: secondaryColor,\r\n    },\r\n    {\r\n      width: 15,\r\n      height: 40,\r\n      y: 70,\r\n      hoverHeight: 60,\r\n      hoverY: 90,\r\n      x: 220,\r\n      fill: color,\r\n      hoverFill: color,\r\n    },\r\n    {\r\n      width: 15,\r\n      height: 30,\r\n      y: 110,\r\n      hoverHeight: 70,\r\n      hoverY: 80,\r\n      x: 240,\r\n      fill: \"currentColor\",\r\n      hoverFill: secondaryColor,\r\n    },\r\n    {\r\n      width: 15,\r\n      height: 50,\r\n      y: 110,\r\n      hoverHeight: 50,\r\n      hoverY: 100,\r\n      x: 260,\r\n      fill: \"currentColor\",\r\n      hoverFill: secondaryColor,\r\n    },\r\n    {\r\n      width: 15,\r\n      height: 20,\r\n      y: 110,\r\n      hoverHeight: 80,\r\n      hoverY: 70,\r\n      x: 280,\r\n      fill: \"currentColor\",\r\n      hoverFill: secondaryColor,\r\n    },\r\n    {\r\n      width: 15,\r\n      height: 30,\r\n      y: 80,\r\n      hoverHeight: 90,\r\n      hoverY: 60,\r\n      x: 300,\r\n      fill: color,\r\n      hoverFill: color,\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <div className=\"w-[356px] h-[180px] absolute inset-0 flex items-center justify-center group-hover/animated-card:scale-150 transition-transform duration-500 ease-[cubic-bezier(0.6, 0.6, 0, 1)] z-[8] text-neutral-800/10 dark:text-white/15\">\r\n      <svg width=\"356\" height=\"180\" xmlns=\"http://www.w3.org/2000/svg\">\r\n        {rectsData.map((rect, index) => (\r\n          <rect\r\n            key={index}\r\n            width={rect.width}\r\n            height={hovered ? rect.hoverHeight : rect.height}\r\n            x={rect.x}\r\n            y={hovered ? rect.hoverY : rect.y}\r\n            fill={hovered ? rect.hoverFill : rect.fill}\r\n            rx=\"2\"\r\n            ry=\"2\"\r\n            className=\"transition-all duration-500 ease-[cubic-bezier(0.6, 0.6, 0, 1)]\"\r\n          />\r\n        ))}\r\n      </svg>\r\n    </div>\r\n  );\r\n};\r\n",
      "type": "registry:ui"
    }
  ]
}