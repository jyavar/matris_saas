{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "spaceship-scrollbar",
  "type": "registry:ui",
  "title": "Spaceship Scrollbar",
  "description": "An animated scrollbar that dynamically tracks progress, offering a sleek and interactive user experience.",
  "dependencies": [
    "framer-motion"
  ],
  "files": [
    {
      "path": "registry/components/spaceship-scrollbar.tsx",
      "content": "\"use client\";\r\n\r\nimport { motion, useScroll, useSpring, useTransform } from \"framer-motion\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nexport const SpaceshipScrollbar = () => {\r\n  const { scrollYProgress } = useScroll();\r\n  const [isScrolling, setIsScrolling] = useState(false);\r\n  const [scrollDirection, setScrollDirection] = useState<\"up\" | \"down\">(\"down\");\r\n  const [lastScrollY, setLastScrollY] = useState(0);\r\n\r\n  const yProgress = useSpring(scrollYProgress, {\r\n    stiffness: 300,\r\n    damping: 40,\r\n    mass: 0.5,\r\n  });\r\n\r\n  useEffect(() => {\r\n    let timeout: NodeJS.Timeout;\r\n    const handleScroll = () => {\r\n      const currentScrollY = window.scrollY;\r\n      setScrollDirection(currentScrollY > lastScrollY ? \"down\" : \"up\");\r\n      setLastScrollY(currentScrollY);\r\n      setIsScrolling(true);\r\n      clearTimeout(timeout);\r\n      timeout = setTimeout(() => setIsScrolling(false), 150);\r\n    };\r\n\r\n    window.addEventListener(\"scroll\", handleScroll);\r\n    return () => {\r\n      window.removeEventListener(\"scroll\", handleScroll);\r\n      clearTimeout(timeout);\r\n    };\r\n  }, [lastScrollY]);\r\n\r\n  return (\r\n    <>\r\n      <style jsx global>{`\r\n        body::-webkit-scrollbar {\r\n          display: none;\r\n        }\r\n        body {\r\n          scrollbar-width: none;\r\n          -ms-overflow-style: none;\r\n        }\r\n      `}</style>\r\n\r\n      {/* Track */}\r\n      <motion.div className=\"fixed right-6 top-[10%] bottom-[10%] w-[2px] z-50 dark:bg-[rgba(255,255,255,0.03)] bg-[rgba(0,0,0,0.1)] dark:border-radius-[1px] border-radius-[1px] dark:backdrop-filter-blur-[8px] backdrop-filter-blur-[8px]\">\r\n        {/* Progress line */}\r\n        <motion.div\r\n          className=\"absolute top-0 right-0 w-full\"\r\n          style={{\r\n            height: \"100%\",\r\n            scaleY: yProgress,\r\n            transformOrigin: \"top\",\r\n            background:\r\n              \"linear-gradient(180deg, rgba(255,255,255,0.2) 0%, rgba(255,255,255,0.05) 100%)\",\r\n          }}\r\n        />\r\n\r\n        {/* Spaceship */}\r\n        <motion.div\r\n          className=\"absolute -left-[12px] w-[26px] h-[26px]\"\r\n          style={{\r\n            top: useTransform(yProgress, [0, 1], [\"0%\", \"100%\"]),\r\n            rotate: scrollDirection === \"down\" ? 0 : 180,\r\n          }}\r\n        >\r\n          {/* Spaceship body */}\r\n          <motion.div\r\n            className=\"relative w-full h-full\"\r\n            animate={{\r\n              scale: isScrolling ? [1, 1.05, 1] : 1,\r\n              rotate: isScrolling\r\n                ? [0, scrollDirection === \"down\" ? 5 : -5, 0]\r\n                : 0,\r\n            }}\r\n            transition={{ duration: 0.3, ease: \"easeInOut\" }}\r\n          >\r\n            {/* Main body - glass effect */}\r\n            <div className=\"absolute inset-0 rounded-full dark:bg-gradient-to-br dark:from-white/20 dark:to-white/5 bg-gradient-to-br from-black/20 to-black/5 dark:backdrop-blur-sm backdrop-blur-sm dark:border dark:border-white/10 border border-black/10 shadow-lg\" />\r\n\r\n            {/* Inner glow */}\r\n            <div className=\"absolute inset-1 rounded-full dark:bg-gradient-to-br dark:from-white/40 dark:to-transparent bg-gradient-to-br from-black/40 to-transparent blur-[1px]\" />\r\n\r\n            {/* Center core */}\r\n            <div className=\"absolute inset-[30%] rounded-full dark:bg-white/80 bg-black/70 blur-[0.5px]\" />\r\n\r\n            {/* Thruster effects */}\r\n            <motion.div\r\n              className=\"absolute inset-x-0 -bottom-4\"\r\n              animate={\r\n                isScrolling\r\n                  ? {\r\n                      opacity: [0.3, 0.8, 0.3],\r\n                      scale: [0.8, 1, 0.8],\r\n                    }\r\n                  : { opacity: 0.3, scale: 0.8 }\r\n              }\r\n              transition={{\r\n                duration: 0.5,\r\n                repeat: isScrolling ? Number.POSITIVE_INFINITY : 0,\r\n              }}\r\n            >\r\n              {/* Main thruster */}\r\n              <div className=\"w-[2px] h-6 mx-auto dark:bg-gradient-to-b dark:from-white dark:to-transparent bg-gradient-to-b from-black to-transparent blur-[2px]\" />\r\n\r\n              {/* Side thrusters */}\r\n              <div className=\"absolute top-1 left-[45%] w-[1px] h-4 dark:bg-gradient-to-b dark:from-white/50 dark:to-transparent bg-gradient-to-b from-black/50 to-transparent blur-[1px] rotate-[-15deg]\" />\r\n              <div className=\"absolute top-1 right-[45%] w-[1px] h-4 dark:bg-gradient-to-b dark:from-white/50 dark:to-transparent bg-gradient-to-b from-black/50 to-transparent blur-[1px] rotate-[15deg]\" />\r\n            </motion.div>\r\n\r\n            {/* Particle effects */}\r\n            {isScrolling && (\r\n              <motion.div className=\"absolute inset-0\">\r\n                {[...Array(6)].map((_, i) => (\r\n                  <motion.div\r\n                    key={`particle-${Math.random().toString(36).substr(2, 9)}`}\r\n                    className=\"absolute w-[2px] h-[2px] dark:bg-white/60 bg-black/60 rounded-full blur-[0.5px]\"\r\n                    initial={{\r\n                      x: 0,\r\n                      y: 0,\r\n                      opacity: 0.8,\r\n                    }}\r\n                    animate={{\r\n                      x: Math.random() * 40 - 20,\r\n                      y: scrollDirection === \"down\" ? 20 : -20,\r\n                      opacity: 0,\r\n                    }}\r\n                    transition={{\r\n                      duration: 0.5 + Math.random() * 0.3,\r\n                      repeat: Number.POSITIVE_INFINITY,\r\n                      repeatDelay: Math.random() * 0.2,\r\n                    }}\r\n                    style={{\r\n                      left: `${Math.random() * 100}%`,\r\n                      top: `${Math.random() * 100}%`,\r\n                    }}\r\n                  />\r\n                ))}\r\n              </motion.div>\r\n            )}\r\n          </motion.div>\r\n        </motion.div>\r\n      </motion.div>\r\n    </>\r\n  );\r\n};\r\n",
      "type": "registry:ui"
    }
  ]
}