{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "expandable-card",
  "type": "registry:ui",
  "title": "Expandable Card",
  "description": "A versatile and engaging UI component that allows users to explore content in a more immersive way.",
  "dependencies": [
    "framer-motion"
  ],
  "files": [
    {
      "path": "registry/components/expandable-card.tsx",
      "content": "\"use client\";\r\n\r\nimport * as React from \"react\";\r\nimport { AnimatePresence, motion } from \"framer-motion\";\r\nimport { cn } from \"@/lib/utils\";\r\n\r\ninterface ExpandableCardProps {\r\n  title: string;\r\n  src: string;\r\n  description: string;\r\n  children?: React.ReactNode;\r\n  className?: string;\r\n  classNameExpanded?: string;\r\n  [key: string]: any;\r\n}\r\n\r\nexport function ExpandableCard({\r\n  title,\r\n  src,\r\n  description,\r\n  children,\r\n  className,\r\n  classNameExpanded,\r\n  ...props\r\n}: ExpandableCardProps) {\r\n  const [active, setActive] = React.useState(false);\r\n  const cardRef = React.useRef<HTMLDivElement>(null);\r\n  const id = React.useId();\r\n\r\n  React.useEffect(() => {\r\n    const onKeyDown = (event: KeyboardEvent) => {\r\n      if (event.key === \"Escape\") {\r\n        setActive(false);\r\n      }\r\n    };\r\n\r\n    const handleClickOutside = (event: MouseEvent | TouchEvent) => {\r\n      if (cardRef.current && !cardRef.current.contains(event.target as Node)) {\r\n        setActive(false);\r\n      }\r\n    };\r\n\r\n    window.addEventListener(\"keydown\", onKeyDown);\r\n    document.addEventListener(\"mousedown\", handleClickOutside);\r\n    document.addEventListener(\"touchstart\", handleClickOutside);\r\n\r\n    return () => {\r\n      window.removeEventListener(\"keydown\", onKeyDown);\r\n      document.removeEventListener(\"mousedown\", handleClickOutside);\r\n      document.removeEventListener(\"touchstart\", handleClickOutside);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <AnimatePresence>\r\n        {active && (\r\n          <motion.div\r\n            initial={{ opacity: 0 }}\r\n            animate={{ opacity: 1 }}\r\n            exit={{ opacity: 0 }}\r\n            className=\"fixed inset-0 bg-white/50 dark:bg-black/50 backdrop-blur-md h-full w-full z-10\"\r\n          />\r\n        )}\r\n      </AnimatePresence>\r\n      <AnimatePresence>\r\n        {active && (\r\n          <div\r\n            className={cn(\r\n              \"fixed inset-0 grid place-items-center z-[100] sm:mt-16 before:pointer-events-none\",\r\n            )}\r\n          >\r\n            <motion.div\r\n              layoutId={`card-${title}-${id}`}\r\n              ref={cardRef}\r\n              className={cn(\r\n                \"w-full max-w-[850px] h-full flex flex-col overflow-auto [scrollbar-width:none] [-ms-overflow-style:none] [-webkit-overflow-scrolling:touch] sm:rounded-t-3xl bg-zinc-50 shadow-sm dark:shadow-none dark:bg-zinc-950 relative\",\r\n                classNameExpanded,\r\n              )}\r\n              {...props}\r\n            >\r\n              <motion.div layoutId={`image-${title}-${id}`}>\r\n                <div className=\"relative before:absolute before:inset-x-0 before:bottom-[-1px] before:h-[70px] before:z-50 before:bg-gradient-to-t dark:before:from-zinc-950 before:from-zinc-50\">\r\n                  <img\r\n                    src={src}\r\n                    alt={title}\r\n                    className=\"w-full h-80 object-cover object-center\"\r\n                  />\r\n                </div>\r\n              </motion.div>\r\n              <div className=\"relative h-full before:fixed before:inset-x-0 before:bottom-0 before:h-[70px] before:z-50 before:bg-gradient-to-t dark:before:from-zinc-950 before:from-zinc-50\">\r\n                <div className=\"flex justify-between items-start p-8 h-auto\">\r\n                  <div>\r\n                    <motion.p\r\n                      layoutId={`description-${description}-${id}`}\r\n                      className=\"text-zinc-500 dark:text-zinc-400 text-lg\"\r\n                    >\r\n                      {description}\r\n                    </motion.p>\r\n                    <motion.h3\r\n                      layoutId={`title-${title}-${id}`}\r\n                      className=\"font-semibold text-black dark:text-white text-4xl sm:text-4xl mt-0.5\"\r\n                    >\r\n                      {title}\r\n                    </motion.h3>\r\n                  </div>\r\n                  <motion.button\r\n                    aria-label=\"Close card\"\r\n                    layoutId={`button-${title}-${id}`}\r\n                    className=\"h-10 w-10 shrink-0 flex items-center justify-center rounded-full bg-zinc-50 dark:bg-zinc-950 text-neutral-700 hover:bg-neutral-50 dark:hover:bg-neutral-950 dark:text-white/70 text-black/70 border border-gray-200/90 dark:border-zinc-900 hover:border-gray-300/90 hover:text-black dark:hover:text-white dark:hover:border-zinc-800 transition-colors duration-300 focus:outline-none\"\r\n                    onClick={() => setActive(false)}\r\n                  >\r\n                    <motion.div\r\n                      animate={{ rotate: active ? 45 : 0 }}\r\n                      transition={{ duration: 0.4 }}\r\n                    >\r\n                      <svg\r\n                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                        width=\"20\"\r\n                        height=\"20\"\r\n                        viewBox=\"0 0 24 24\"\r\n                        fill=\"none\"\r\n                        stroke=\"currentColor\"\r\n                        strokeWidth=\"2\"\r\n                        strokeLinecap=\"round\"\r\n                        strokeLinejoin=\"round\"\r\n                      >\r\n                        <path d=\"M5 12h14\" />\r\n                        <path d=\"M12 5v14\" />\r\n                      </svg>\r\n                    </motion.div>\r\n                  </motion.button>\r\n                </div>\r\n                <div className=\"relative px-6 sm:px-8\">\r\n                  <motion.div\r\n                    layout\r\n                    initial={{ opacity: 0 }}\r\n                    animate={{ opacity: 1 }}\r\n                    exit={{ opacity: 0 }}\r\n                    className=\"text-zinc-500 dark:text-zinc-400 text-base pb-10 flex flex-col items-start gap-4 overflow-auto \"\r\n                  >\r\n                    {children}\r\n                  </motion.div>\r\n                </div>\r\n              </div>\r\n            </motion.div>\r\n          </div>\r\n        )}\r\n      </AnimatePresence>\r\n\r\n      <motion.div\r\n        role=\"dialog\"\r\n        aria-labelledby={`card-title-${id}`}\r\n        aria-modal=\"true\"\r\n        layoutId={`card-${title}-${id}`}\r\n        onClick={() => setActive(true)}\r\n        className={cn(\r\n          \"p-3 flex flex-col justify-between items-center bg-zinc-50 shadow-sm dark:shadow-none dark:bg-zinc-950 rounded-2xl cursor-pointer border border-gray-200/70 dark:border-zinc-900\",\r\n          className,\r\n        )}\r\n      >\r\n        <div className=\"flex gap-4 flex-col\">\r\n          <motion.div layoutId={`image-${title}-${id}`}>\r\n            <img\r\n              src={src}\r\n              alt={title}\r\n              className=\"w-64 h-56 rounded-lg object-cover object-center\"\r\n            />\r\n          </motion.div>\r\n          <div className=\"flex justify-between items-center\">\r\n            <div className=\"flex flex-col\">\r\n              <motion.p\r\n                layoutId={`description-${description}-${id}`}\r\n                className=\"text-zinc-500 dark:text-zinc-400 md:text-left text-sm font-medium\"\r\n              >\r\n                {description}\r\n              </motion.p>\r\n              <motion.h3\r\n                layoutId={`title-${title}-${id}`}\r\n                className=\"text-black dark:text-white md:text-left font-semibold\"\r\n              >\r\n                {title}\r\n              </motion.h3>\r\n            </div>\r\n            <motion.button\r\n              aria-label=\"Open card\"\r\n              layoutId={`button-${title}-${id}`}\r\n              className={cn(\r\n                \"h-8 w-8 shrink-0 flex items-center justify-center rounded-full bg-zinc-50 dark:bg-zinc-950 text-neutral-700 hover:bg-neutral-50 dark:hover:bg-neutral-950 dark:text-white/70 text-black/70 border border-gray-200/90 dark:border-zinc-900 hover:border-gray-300/90 hover:text-black dark:hover:text-white dark:hover:border-zinc-800 transition-colors duration-300  focus:outline-none\",\r\n                className,\r\n              )}\r\n            >\r\n              <motion.div\r\n                animate={{ rotate: active ? 45 : 0 }}\r\n                transition={{ duration: 0.4 }}\r\n              >\r\n                <svg\r\n                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                  width=\"16\"\r\n                  height=\"16\"\r\n                  viewBox=\"0 0 24 24\"\r\n                  fill=\"none\"\r\n                  stroke=\"currentColor\"\r\n                  strokeWidth=\"2\"\r\n                  strokeLinecap=\"round\"\r\n                  strokeLinejoin=\"round\"\r\n                >\r\n                  <path d=\"M5 12h14\" />\r\n                  <path d=\"M12 5v14\" />\r\n                </svg>\r\n              </motion.div>\r\n            </motion.button>\r\n          </div>\r\n        </div>\r\n      </motion.div>\r\n    </>\r\n  );\r\n}\r\n",
      "type": "registry:ui"
    }
  ]
}