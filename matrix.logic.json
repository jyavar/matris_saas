[
  {
    "id": "~12_CHECKLIST_MAESTRO.md::1. ~1_BACKEND_ROADMAP.md::✅ Crear carpeta `/backend/` con estructura clara: `/routes`, `/middleware`, `/services`, `/tests`",
    "nombre": "✅ Crear carpeta `/backend/` con estructura clara: `/routes`, `/middleware`, `/services`, `/tests`",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "backend in scripts/angel-vigilante.ts"
  },
  {
    "id": "~12_CHECKLIST_MAESTRO.md::1. ~1_BACKEND_ROADMAP.md::⬜️ Estructura pendiente: `/lib`, `/validators`, `/types`",
    "nombre": "⬜️ Estructura pendiente: `/lib`, `/validators`, `/types`",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "types in packages/db-types/src/index.ts"
  },
  {
    "id": "~12_CHECKLIST_MAESTRO.md::1. ~1_BACKEND_ROADMAP.md::✅ Inicializar `tsconfig.json` estricto y `vitest.config.ts`",
    "nombre": "✅ Inicializar `tsconfig.json` estricto y `vitest.config.ts`",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "estricto in scripts/audit/extract-audit.ts"
  },
  {
    "id": "~12_CHECKLIST_MAESTRO.md::1. ~1_BACKEND_ROADMAP.md::✅ Instalar dependencias críticas: `zod`, `vitest`, `supertest`, `@supabase/supabase-js`, `stripe`, `resend`, `openai`, `dotenv`, etc.",
    "nombre": "✅ Instalar dependencias críticas: `zod`, `vitest`, `supertest`, `@supabase/supabase-js`, `stripe`, `resend`, `openai`, `dotenv`, etc.",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "vitest in packages/utils/src/add.test.ts"
  },
  {
    "id": "~12_CHECKLIST_MAESTRO.md::1. ~1_BACKEND_ROADMAP.md::⬜️ Crear router.ts central y modularidad avanzada",
    "nombre": "⬜️ Crear router.ts central y modularidad avanzada",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "central in scripts/audit-module.ts"
  },
  {
    "id": "~12_CHECKLIST_MAESTRO.md::1. ~1_BACKEND_ROADMAP.md::✅ Rutas y middleware básico iniciado",
    "nombre": "✅ Rutas y middleware básico iniciado",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "Rutas in scripts/agents/context-watchdog.ts"
  },
  {
    "id": "~12_CHECKLIST_MAESTRO.md::1. ~1_BACKEND_ROADMAP.md::⬜️ Middleware de validación y seguridad completo (falta rateLimit, Zod en todos los inputs)",
    "nombre": "⬜️ Middleware de validación y seguridad completo (falta rateLimit, Zod en todos los inputs)",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "todos in packages/db-types/src/index.ts"
  },
  {
    "id": "~12_CHECKLIST_MAESTRO.md::1. ~1_BACKEND_ROADMAP.md::⬜️ Integraciones externas (Stripe, Resend, OpenAI, PostHog) completas",
    "nombre": "⬜️ Integraciones externas (Stripe, Resend, OpenAI, PostHog) completas",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "OpenAI in scripts/generate-code.ts"
  },
  {
    "id": "~12_CHECKLIST_MAESTRO.md::1. ~1_BACKEND_ROADMAP.md::⬜️ Billing modular y enforcement por plan",
    "nombre": "⬜️ Billing modular y enforcement por plan",
    "logica_verificada": false,
    "fuente_verificacion": "regex",
    "detalle": "No se encontró lógica relevante"
  },
  {
    "id": "~12_CHECKLIST_MAESTRO.md::1. ~1_BACKEND_ROADMAP.md::⬜️ Módulos de negocio (ej: campaigns) completos",
    "nombre": "⬜️ Módulos de negocio (ej: campaigns) completos",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "ej in scripts/audit-module.ts"
  },
  {
    "id": "~12_CHECKLIST_MAESTRO.md::1. ~1_BACKEND_ROADMAP.md::✅ Tests unitarios e integración iniciados",
    "nombre": "✅ Tests unitarios e integración iniciados",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "Tests in scripts/report-status.ts"
  },
  {
    "id": "~12_CHECKLIST_MAESTRO.md::1. ~1_BACKEND_ROADMAP.md::✅ Fixtures de datos dummy y seeding básico implementados",
    "nombre": "✅ Fixtures de datos dummy y seeding básico implementados",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "datos in scripts/db-seed.ts"
  },
  {
    "id": "~12_CHECKLIST_MAESTRO.md::1. ~1_BACKEND_ROADMAP.md::✅ Logger estructurado básico",
    "nombre": "✅ Logger estructurado básico",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "Logger in scripts/audit/checklist-audit.ts"
  },
  {
    "id": "~12_CHECKLIST_MAESTRO.md::1. ~1_BACKEND_ROADMAP.md::⬜️ Logs a PostHog y bitácora de acciones clave",
    "nombre": "⬜️ Logs a PostHog y bitácora de acciones clave",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "Logs in scripts/agents/strato.logic.ts"
  },
  {
    "id": "~12_CHECKLIST_MAESTRO.md::1. ~1_BACKEND_ROADMAP.md::⬜️ CLI de validación y snapshot/rollback",
    "nombre": "⬜️ CLI de validación y snapshot/rollback",
    "logica_verificada": true,
    "fuente_verificacion": "override",
    "detalle": "Override: validación y snapshot implementados manualmente."
  },
  {
    "id": "~12_CHECKLIST_MAESTRO.md::1. ~1_BACKEND_ROADMAP.md::⬜️ Backend 100% modularizado, validado, protegido y listo para producción",
    "nombre": "⬜️ Backend 100% modularizado, validado, protegido y listo para producción",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "para in packages/utils/src/add.ts"
  },
  {
    "id": "~12_CHECKLIST_MAESTRO.md::2. Frontend (Next.js/React)::✅ Estructura base en `/frontend/` con carpetas `/components`, `/pages` o `/app`, `/hooks`, `/contexts`, `/services`, `/lib`",
    "nombre": "✅ Estructura base en `/frontend/` con carpetas `/components`, `/pages` o `/app`, `/hooks`, `/contexts`, `/services`, `/lib`",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "base in packages/db-types/src/index.ts"
  },
  {
    "id": "~12_CHECKLIST_MAESTRO.md::2. Frontend (Next.js/React)::✅ Configuración de TailwindCSS y PostCSS",
    "nombre": "✅ Configuración de TailwindCSS y PostCSS",
    "logica_verificada": true,
    "fuente_verificacion": "override",
    "detalle": "Override: configuración verificada manualmente en tailwind.config.js y postcss.config.js."
  },
  {
    "id": "~12_CHECKLIST_MAESTRO.md::2. Frontend (Next.js/React)::✅ Uso de shadcn/ui y clsx para UI",
    "nombre": "✅ Uso de shadcn/ui y clsx para UI",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "para in packages/utils/src/add.ts"
  },
  {
    "id": "~12_CHECKLIST_MAESTRO.md::2. Frontend (Next.js/React)::✅ Integración de Context Guard y convenciones de rutas",
    "nombre": "✅ Integración de Context Guard y convenciones de rutas",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "Guard in scripts/angel-vigilante.ts"
  },
  {
    "id": "~12_CHECKLIST_MAESTRO.md::2. Frontend (Next.js/React)::⬜️ Componentes UI reutilizables completos (botones, cards, inputs, etc.)",
    "nombre": "⬜️ Componentes UI reutilizables completos (botones, cards, inputs, etc.)",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "etc in scripts/agents/context-watchdog.ts"
  },
  {
    "id": "~12_CHECKLIST_MAESTRO.md::2. Frontend (Next.js/React)::⬜️ Tests de componentes con Testing Library",
    "nombre": "⬜️ Tests de componentes con Testing Library",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "Tests in scripts/report-status.ts"
  },
  {
    "id": "~12_CHECKLIST_MAESTRO.md::2. Frontend (Next.js/React)::⬜️ Tests E2E con Playwright para flujos críticos",
    "nombre": "⬜️ Tests E2E con Playwright para flujos críticos",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "para in packages/utils/src/add.ts"
  },
  {
    "id": "~12_CHECKLIST_MAESTRO.md::2. Frontend (Next.js/React)::⬜️ Validación de accesibilidad (a11y), dark mode, loading states, fallback de errores",
    "nombre": "⬜️ Validación de accesibilidad (a11y), dark mode, loading states, fallback de errores",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "mode in scripts/generate-code.ts"
  },
  {
    "id": "~12_CHECKLIST_MAESTRO.md::2. Frontend (Next.js/React)::⬜️ Integración real con API del backend (fetcher tipado, Zod/OpenAPI)",
    "nombre": "⬜️ Integración real con API del backend (fetcher tipado, Zod/OpenAPI)",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "backend in scripts/angel-vigilante.ts"
  },
  {
    "id": "~12_CHECKLIST_MAESTRO.md::2. Frontend (Next.js/React)::⬜️ Cobertura de UI y lógica ≥ 90%",
    "nombre": "⬜️ Cobertura de UI y lógica ≥ 90%",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "Cobertura in scripts/audit/verify-coverage.ts"
  },
  {
    "id": "~12_CHECKLIST_MAESTRO.md::2. Frontend (Next.js/React)::⬜️ Soporte para theming y personalización visual por SaaS clonado",
    "nombre": "⬜️ Soporte para theming y personalización visual por SaaS clonado",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "para in packages/utils/src/add.ts"
  },
  {
    "id": "~12_CHECKLIST_MAESTRO.md::3. ~3_MATRIX_ROADMAP.md::✅ Fase 0: Planificación y roadmap creado",
    "nombre": "✅ Fase 0: Planificación y roadmap creado",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "roadmap in scripts/audit/extract-audit.ts"
  },
  {
    "id": "~12_CHECKLIST_MAESTRO.md::3. ~3_MATRIX_ROADMAP.md::✅ Middleware de autenticación implementado",
    "nombre": "✅ Middleware de autenticación implementado",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "Middleware in scripts/audit/checklist-audit.ts"
  },
  {
    "id": "~12_CHECKLIST_MAESTRO.md::3. ~3_MATRIX_ROADMAP.md::✅ Rutas protegidas y endpoint `/me` implementado",
    "nombre": "✅ Rutas protegidas y endpoint `/me` implementado",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "me in packages/db-types/src/index.ts"
  },
  {
    "id": "~12_CHECKLIST_MAESTRO.md::3. ~3_MATRIX_ROADMAP.md::✅ Refactor de users a profiles y tabla en Supabase",
    "nombre": "✅ Refactor de users a profiles y tabla en Supabase",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "users in packages/db-types/src/index.ts"
  },
  {
    "id": "~12_CHECKLIST_MAESTRO.md::3. ~3_MATRIX_ROADMAP.md::✅ Migraciones y tipos documentados y sincronizados (pendiente sólo migración de todos multiusuario)",
    "nombre": "✅ Migraciones y tipos documentados y sincronizados (pendiente sólo migración de todos multiusuario)",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "todos in packages/db-types/src/index.ts"
  },
  {
    "id": "~12_CHECKLIST_MAESTRO.md::3. ~3_MATRIX_ROADMAP.md::⬜️ Script de inicialización de proyecto (init-project)",
    "nombre": "⬜️ Script de inicialización de proyecto (init-project)",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "Script in scripts/audit-module.ts"
  },
  {
    "id": "~12_CHECKLIST_MAESTRO.md::3. ~3_MATRIX_ROADMAP.md::✅ Seeding de base de datos básico implementado",
    "nombre": "✅ Seeding de base de datos básico implementado",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "base in packages/db-types/src/index.ts"
  },
  {
    "id": "~12_CHECKLIST_MAESTRO.md::3. ~3_MATRIX_ROADMAP.md::⬜️ Documentación exhaustiva y plantilla README",
    "nombre": "⬜️ Documentación exhaustiva y plantilla README",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "README in scripts/audit/extract-audit.ts"
  },
  {
    "id": "~12_CHECKLIST_MAESTRO.md::3. ~3_MATRIX_ROADMAP.md::⬜️ Limpieza final y conversión a repo plantilla",
    "nombre": "⬜️ Limpieza final y conversión a repo plantilla",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "repo in scripts/angel-vigilante.ts"
  },
  {
    "id": "~12_CHECKLIST_MAESTRO.md::4. ~4_PLAYBOOK_RULES.md::✅ Stack y convenciones STRATO aplicadas (pnpm, tsconfig.base.json, zod, turbo, eslint, etc.)",
    "nombre": "✅ Stack y convenciones STRATO aplicadas (pnpm, tsconfig.base.json, zod, turbo, eslint, etc.)",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "STRATO in scripts/angel-vigilante.ts"
  },
  {
    "id": "~12_CHECKLIST_MAESTRO.md::4. ~4_PLAYBOOK_RULES.md::✅ Prohibiciones y reglas de oro respetadas (no any, no console.log, no alias rotos, etc.)",
    "nombre": "✅ Prohibiciones y reglas de oro respetadas (no any, no console.log, no alias rotos, etc.)",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "alias in scripts/audit-module.ts"
  },
  {
    "id": "~12_CHECKLIST_MAESTRO.md::4. ~4_PLAYBOOK_RULES.md::✅ Validaciones de estructura y convenciones activas",
    "nombre": "✅ Validaciones de estructura y convenciones activas",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "estructura in scripts/agents/strato.logic.ts"
  },
  {
    "id": "~12_CHECKLIST_MAESTRO.md::5. ~5_PLAYBOOK.md::✅ Setup base blindado (estructura, tooling, CI/CD, conexiones core)",
    "nombre": "✅ Setup base blindado (estructura, tooling, CI/CD, conexiones core)",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "base in packages/db-types/src/index.ts"
  },
  {
    "id": "~12_CHECKLIST_MAESTRO.md::5. ~5_PLAYBOOK.md::✅ Guardias técnicos activos (pre-commit, CI/CD, runtime defense)",
    "nombre": "✅ Guardias técnicos activos (pre-commit, CI/CD, runtime defense)",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "precommit in scripts/report-strato-defense.ts"
  },
  {
    "id": "~12_CHECKLIST_MAESTRO.md::5. ~5_PLAYBOOK.md::✅ Estrategia modular y clonable",
    "nombre": "✅ Estrategia modular y clonable",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "clonable in scripts/angel-vigilante.ts"
  },
  {
    "id": "~12_CHECKLIST_MAESTRO.md::5. ~5_PLAYBOOK.md::✅ Flujo de desarrollo AI-assistido y validaciones",
    "nombre": "✅ Flujo de desarrollo AI-assistido y validaciones",
    "logica_verificada": false,
    "fuente_verificacion": "regex",
    "detalle": "No se encontró lógica relevante"
  },
  {
    "id": "~12_CHECKLIST_MAESTRO.md::5. ~5_PLAYBOOK.md::✅ Validaciones, reporting y alertas",
    "nombre": "✅ Validaciones, reporting y alertas",
    "logica_verificada": false,
    "fuente_verificacion": "regex",
    "detalle": "No se encontró lógica relevante"
  },
  {
    "id": "~12_CHECKLIST_MAESTRO.md::5. ~5_PLAYBOOK.md::✅ Reglas de oro para el founder",
    "nombre": "✅ Reglas de oro para el founder",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "para in packages/utils/src/add.ts"
  },
  {
    "id": "~12_CHECKLIST_MAESTRO.md::5. ~5_PLAYBOOK.md::⬜️ Desarrollo funcional robusto completo (falta cobertura total de tests, integración avanzada)",
    "nombre": "⬜️ Desarrollo funcional robusto completo (falta cobertura total de tests, integración avanzada)",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "falta in scripts/db-seed.ts"
  },
  {
    "id": "~12_CHECKLIST_MAESTRO.md::5. ~5_PLAYBOOK.md::⬜️ Integraciones estratégicas y AI (OpenAI, Stripe, Resend, PostHog, etc.)",
    "nombre": "⬜️ Integraciones estratégicas y AI (OpenAI, Stripe, Resend, PostHog, etc.)",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "OpenAI in scripts/generate-code.ts"
  },
  {
    "id": "~12_CHECKLIST_MAESTRO.md::5. ~5_PLAYBOOK.md::⬜️ Escalabilidad real y multi-SaaS (clonación, orquestador de agentes)",
    "nombre": "⬜️ Escalabilidad real y multi-SaaS (clonación, orquestador de agentes)",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "real in scripts/check-blindaje-real.ts"
  },
  {
    "id": "~12_CHECKLIST_MAESTRO.md::5. ~5_PLAYBOOK.md::⬜️ Comercialización y control operativo (planes, dashboard, docs públicas)",
    "nombre": "⬜️ Comercialización y control operativo (planes, dashboard, docs públicas)",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "control in scripts/audit/checklist-audit.ts"
  },
  {
    "id": "~12_CHECKLIST_MAESTRO.md::5. ~5_PLAYBOOK.md::⬜️ Sistema modular de productos SaaS y ciclo de vida de módulos",
    "nombre": "⬜️ Sistema modular de productos SaaS y ciclo de vida de módulos",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "SaaS in scripts/create-saas-clone.ts"
  },
  {
    "id": "~12_CHECKLIST_MAESTRO.md::6. ~6_README.cursor.md::✅ Context Guard y reglas de estructura activas",
    "nombre": "✅ Context Guard y reglas de estructura activas",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "Guard in scripts/angel-vigilante.ts"
  },
  {
    "id": "~12_CHECKLIST_MAESTRO.md::6. ~6_README.cursor.md::✅ Ejemplo de manifiesto y uso de guardianes",
    "nombre": "✅ Ejemplo de manifiesto y uso de guardianes",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "manifiesto in scripts/agents/context-watchdog.ts"
  },
  {
    "id": "~12_CHECKLIST_MAESTRO.md::6. ~6_README.cursor.md::✅ Instrucciones claras para contribución y validación",
    "nombre": "✅ Instrucciones claras para contribución y validación",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "para in packages/utils/src/add.ts"
  },
  {
    "id": "~12_CHECKLIST_MAESTRO.md::7. ~7_SAAS_MATRIX_ROADMAP.md::⬜️ Módulo de AuthN/AuthZ completo",
    "nombre": "⬜️ Módulo de AuthN/AuthZ completo",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "completo in scripts/audit/audit-dependencies.ts"
  },
  {
    "id": "~12_CHECKLIST_MAESTRO.md::7. ~7_SAAS_MATRIX_ROADMAP.md::✅ Multi-tenancy (aislamiento de clientes y RLS) implementado en backend",
    "nombre": "✅ Multi-tenancy (aislamiento de clientes y RLS) implementado en backend",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "backend in scripts/angel-vigilante.ts"
  },
  {
    "id": "~12_CHECKLIST_MAESTRO.md::7. ~7_SAAS_MATRIX_ROADMAP.md::⬜️ Billing (Stripe) integrado",
    "nombre": "⬜️ Billing (Stripe) integrado",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "Stripe in scripts/audit/checklist-audit.ts"
  },
  {
    "id": "~12_CHECKLIST_MAESTRO.md::7. ~7_SAAS_MATRIX_ROADMAP.md::⬜️ UI compartida y theming",
    "nombre": "⬜️ UI compartida y theming",
    "logica_verificada": false,
    "fuente_verificacion": "regex",
    "detalle": "No se encontró lógica relevante"
  },
  {
    "id": "~12_CHECKLIST_MAESTRO.md::7. ~7_SAAS_MATRIX_ROADMAP.md::⬜️ Admin dashboard",
    "nombre": "⬜️ Admin dashboard",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "Admin in scripts/db-seed.ts"
  },
  {
    "id": "~12_CHECKLIST_MAESTRO.md::8. ~8_SCORECARD.md::✅ Calidad de código y cero deuda técnica (95/100)",
    "nombre": "✅ Calidad de código y cero deuda técnica (95/100)",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "deuda in scripts/night-watchman.ts"
  },
  {
    "id": "~12_CHECKLIST_MAESTRO.md::8. ~8_SCORECARD.md::⬜️ Cobertura y calidad de tests (15/100, falta tests en frontend y lógica de negocio)",
    "nombre": "⬜️ Cobertura y calidad de tests (15/100, falta tests en frontend y lógica de negocio)",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "frontend in scripts/angel-vigilante.ts"
  },
  {
    "id": "~12_CHECKLIST_MAESTRO.md::8. ~8_SCORECARD.md::⬜️ Automatización y CI/CD en la nube (60/100, falta pipeline en GitHub Actions)",
    "nombre": "⬜️ Automatización y CI/CD en la nube (60/100, falta pipeline en GitHub Actions)",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "falta in scripts/db-seed.ts"
  },
  {
    "id": "~12_CHECKLIST_MAESTRO.md::8. ~8_SCORECARD.md::✅ Arquitectura y estructura del monorepo (100/100)",
    "nombre": "✅ Arquitectura y estructura del monorepo (100/100)",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "estructura in scripts/agents/strato.logic.ts"
  },
  {
    "id": "~12_CHECKLIST_MAESTRO.md::8. ~8_SCORECARD.md::✅ Gestión de base de datos (90/100, falta generación de tipos TS)",
    "nombre": "✅ Gestión de base de datos (90/100, falta generación de tipos TS)",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "base in packages/db-types/src/index.ts"
  },
  {
    "id": "~12_CHECKLIST_MAESTRO.md::8. ~8_SCORECARD.md::⬜️ Seguridad (75/100, falta auditoría de dependencias y gestión de secretos en prod)",
    "nombre": "⬜️ Seguridad (75/100, falta auditoría de dependencias y gestión de secretos en prod)",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "falta in scripts/db-seed.ts"
  },
  {
    "id": "~12_CHECKLIST_MAESTRO.md::9. ~9_STRATO_FULL_CLEAN_COVERAGE.md::⬜️ Auditoría técnica completa (tsc, eslint, context-watchdog, .env)",
    "nombre": "⬜️ Auditoría técnica completa (tsc, eslint, context-watchdog, .env)",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "tsc in packages/db-types/src/index.ts"
  },
  {
    "id": "~12_CHECKLIST_MAESTRO.md::9. ~9_STRATO_FULL_CLEAN_COVERAGE.md::⬜️ Tests y coverage backend y frontend ≥ 90%",
    "nombre": "⬜️ Tests y coverage backend y frontend ≥ 90%",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "backend in scripts/angel-vigilante.ts"
  },
  {
    "id": "~12_CHECKLIST_MAESTRO.md::9. ~9_STRATO_FULL_CLEAN_COVERAGE.md::⬜️ Limpieza de paths, dependencias y archivos",
    "nombre": "⬜️ Limpieza de paths, dependencias y archivos",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "paths in scripts/audit/audit-dependencies.ts"
  },
  {
    "id": "~12_CHECKLIST_MAESTRO.md::9. ~9_STRATO_FULL_CLEAN_COVERAGE.md::⬜️ Blindaje técnico avanzado (manifest, hooks, validate-clean-system)",
    "nombre": "⬜️ Blindaje técnico avanzado (manifest, hooks, validate-clean-system)",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "hooks in scripts/check-blindaje-real.ts"
  },
  {
    "id": "~12_CHECKLIST_MAESTRO.md::9. ~9_STRATO_FULL_CLEAN_COVERAGE.md::⬜️ Validación final y reporte",
    "nombre": "⬜️ Validación final y reporte",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "final in scripts/init-project.ts"
  },
  {
    "id": "~12_CHECKLIST_MAESTRO.md::10. ~10_CHECKLIST_FULL_STRATO.md::⬜️ Tests y coverage backend/frontend completos",
    "nombre": "⬜️ Tests y coverage backend/frontend completos",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "coverage in scripts/audit-module.ts"
  },
  {
    "id": "~12_CHECKLIST_MAESTRO.md::10. ~10_CHECKLIST_FULL_STRATO.md::⬜️ Implementación de módulos clave (auth, multi-tenancy, billing, UI, admin)",
    "nombre": "⬜️ Implementación de módulos clave (auth, multi-tenancy, billing, UI, admin)",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "admin in scripts/db-seed.ts"
  },
  {
    "id": "~12_CHECKLIST_MAESTRO.md::10. ~10_CHECKLIST_FULL_STRATO.md::⬜️ Integraciones estratégicas (Supabase, Stripe, Resend, OpenAI, PostHog)",
    "nombre": "⬜️ Integraciones estratégicas (Supabase, Stripe, Resend, OpenAI, PostHog)",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "Supabase in scripts/db-seed.ts"
  },
  {
    "id": "~12_CHECKLIST_MAESTRO.md::10. ~10_CHECKLIST_FULL_STRATO.md::⬜️ Clonabilidad y automatización (scripts, templates)",
    "nombre": "⬜️ Clonabilidad y automatización (scripts, templates)",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "scripts in scripts/create-saas-clone.ts"
  },
  {
    "id": "~12_CHECKLIST_MAESTRO.md::10. ~10_CHECKLIST_FULL_STRATO.md::⬜️ Reporting, dashboard y auditoría",
    "nombre": "⬜️ Reporting, dashboard y auditoría",
    "logica_verificada": false,
    "fuente_verificacion": "regex",
    "detalle": "No se encontró lógica relevante"
  },
  {
    "id": "~12_CHECKLIST_MAESTRO.md::10. ~10_CHECKLIST_FULL_STRATO.md::⬜️ Documentación y scorecard actualizados",
    "nombre": "⬜️ Documentación y scorecard actualizados",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "scorecard in scripts/audit/extract-audit.ts"
  },
  {
    "id": "~12_CHECKLIST_MAESTRO.md::10. ~10_CHECKLIST_FULL_STRATO.md::⬜️ Validaciones y blindaje final",
    "nombre": "⬜️ Validaciones y blindaje final",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "final in scripts/init-project.ts"
  },
  {
    "id": "~12_CHECKLIST_MAESTRO.md::11. ~11_LOCAL_WORKAROUNDS.md::✅ Workaround temporal para tenant_id en middleware documentado",
    "nombre": "✅ Workaround temporal para tenant_id en middleware documentado",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "para in packages/utils/src/add.ts"
  },
  {
    "id": "~12_CHECKLIST_MAESTRO.md::11. ~11_LOCAL_WORKAROUNDS.md::✅ Pendiente de custom claims en Supabase documentado",
    "nombre": "✅ Pendiente de custom claims en Supabase documentado",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "Supabase in scripts/db-seed.ts"
  },
  {
    "id": "~12_CHECKLIST_MAESTRO.md::11. ~11_LOCAL_WORKAROUNDS.md::✅ Revisión obligatoria antes de producción documentada",
    "nombre": "✅ Revisión obligatoria antes de producción documentada",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "antes in scripts/init-project.ts"
  },
  {
    "id": "~12_CHECKLIST_MAESTRO.md::11. ~11_LOCAL_WORKAROUNDS.md::✅ Workaround documentado para tests que fallan por esquema de profiles",
    "nombre": "✅ Workaround documentado para tests que fallan por esquema de profiles",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "profiles in packages/db-types/src/index.ts"
  },
  {
    "id": "~12_CHECKLIST_MAESTRO.md::12. SEO y SEO Avanzado::⬜️ Módulo SEO con generación de sitemap automático",
    "nombre": "⬜️ Módulo SEO con generación de sitemap automático",
    "logica_verificada": false,
    "fuente_verificacion": "regex",
    "detalle": "No se encontró lógica relevante"
  },
  {
    "id": "~12_CHECKLIST_MAESTRO.md::12. SEO y SEO Avanzado::⬜️ Metatags por página y soporte para OpenGraph/Schema.org",
    "nombre": "⬜️ Metatags por página y soporte para OpenGraph/Schema.org",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "para in packages/utils/src/add.ts"
  },
  {
    "id": "~12_CHECKLIST_MAESTRO.md::12. SEO y SEO Avanzado::⬜️ Soporte para blogs y landings específicas",
    "nombre": "⬜️ Soporte para blogs y landings específicas",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "para in packages/utils/src/add.ts"
  },
  {
    "id": "~12_CHECKLIST_MAESTRO.md::12. SEO y SEO Avanzado::⬜️ Integración de analytics y tracking de SEO",
    "nombre": "⬜️ Integración de analytics y tracking de SEO",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "analytics in packages/db-types/src/index.ts"
  },
  {
    "id": "~12_CHECKLIST_MAESTRO.md::12. SEO y SEO Avanzado::⬜️ Automatización de assets para lanzamientos (Product Hunt, X, newsletters)",
    "nombre": "⬜️ Automatización de assets para lanzamientos (Product Hunt, X, newsletters)",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "para in packages/utils/src/add.ts"
  },
  {
    "id": "~12_CHECKLIST_MAESTRO.md::NOTA: Tests backend pendientes por error de esquema::⬜️ Algunos tests de backend fallan porque la columna `email` no existe en la tabla `profiles`.",
    "nombre": "⬜️ Algunos tests de backend fallan porque la columna `email` no existe en la tabla `profiles`.",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "email in packages/db-types/src/index.ts"
  },
  {
    "id": "~12_CHECKLIST_MAESTRO.md::NOTA: Tests backend pendientes por error de esquema::Acción requerida: restaurar la columna o adaptar los tests/código al nuevo esquema.",
    "nombre": "Acción requerida: restaurar la columna o adaptar los tests/código al nuevo esquema.",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "nuevo in scripts/init-project.ts"
  },
  {
    "id": "~12_CHECKLIST_MAESTRO.md::NOTA: Tests backend pendientes por error de esquema::Ver detalles en `~11_LOCAL_WORKAROUNDS.md`.",
    "nombre": "Ver detalles en `~11_LOCAL_WORKAROUNDS.md`.",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "detalles in scripts/audit/verify-exists.ts"
  },
  {
    "id": "~12_CHECKLIST_MAESTRO.md::RESUMEN Y PORCENTAJE DE IMPLEMENTACIÓN::**Total de ítems principales:** 70",
    "nombre": "**Total de ítems principales:** 70",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "tems in scripts/report-status.ts"
  },
  {
    "id": "~12_CHECKLIST_MAESTRO.md::RESUMEN Y PORCENTAJE DE IMPLEMENTACIÓN::**Ítems implementados (✅):** 28",
    "nombre": "**Ítems implementados (✅):** 28",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": " in packages/db-types/src/index.ts"
  },
  {
    "id": "~12_CHECKLIST_MAESTRO.md::RESUMEN Y PORCENTAJE DE IMPLEMENTACIÓN::**Ítems pendientes (⬜️):** 42",
    "nombre": "**Ítems pendientes (⬜️):** 42",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": " in packages/db-types/src/index.ts"
  },
  {
    "id": "~12_CHECKLIST_MAESTRO.md::Diagnóstico::**Fortalezas:**",
    "nombre": "**Fortalezas:**",
    "logica_verificada": false,
    "fuente_verificacion": "regex",
    "detalle": "No se encontró lógica relevante"
  },
  {
    "id": "~12_CHECKLIST_MAESTRO.md::Diagnóstico::**Debilidades/Pendientes:**",
    "nombre": "**Debilidades/Pendientes:**",
    "logica_verificada": false,
    "fuente_verificacion": "regex",
    "detalle": "No se encontró lógica relevante"
  },
  {
    "id": "~10_CHECKLIST_FULL_STRATO.md::1. Testing y Coverage::[ ] Backend: Tests unitarios para todos los servicios, controladores y middlewares",
    "nombre": "[ ] Backend: Tests unitarios para todos los servicios, controladores y middlewares",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "todos in packages/db-types/src/index.ts"
  },
  {
    "id": "~10_CHECKLIST_FULL_STRATO.md::1. Testing y Coverage::[ ] Backend: Tests de integración para rutas principales (supertest)",
    "nombre": "[ ] Backend: Tests de integración para rutas principales (supertest)",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "para in packages/utils/src/add.ts"
  },
  {
    "id": "~10_CHECKLIST_FULL_STRATO.md::1. Testing y Coverage::[ ] Backend: Fixtures de datos dummy para tests",
    "nombre": "[ ] Backend: Fixtures de datos dummy para tests",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "para in packages/utils/src/add.ts"
  },
  {
    "id": "~10_CHECKLIST_FULL_STRATO.md::1. Testing y Coverage::[ ] Backend: Validar cobertura con `vitest run --coverage` y guardar reporte",
    "nombre": "[ ] Backend: Validar cobertura con `vitest run --coverage` y guardar reporte",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "vitest in packages/utils/src/add.test.ts"
  },
  {
    "id": "~10_CHECKLIST_FULL_STRATO.md::1. Testing y Coverage::[ ] Frontend: Tests de componentes con Testing Library",
    "nombre": "[ ] Frontend: Tests de componentes con Testing Library",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "Frontend in scripts/angel-vigilante.ts"
  },
  {
    "id": "~10_CHECKLIST_FULL_STRATO.md::1. Testing y Coverage::[ ] Frontend: Tests E2E con Playwright para flujos críticos",
    "nombre": "[ ] Frontend: Tests E2E con Playwright para flujos críticos",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "para in packages/utils/src/add.ts"
  },
  {
    "id": "~10_CHECKLIST_FULL_STRATO.md::1. Testing y Coverage::[ ] Frontend: Validar cobertura de UI y lógica",
    "nombre": "[ ] Frontend: Validar cobertura de UI y lógica",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "Frontend in scripts/angel-vigilante.ts"
  },
  {
    "id": "~10_CHECKLIST_FULL_STRATO.md::1. Testing y Coverage::[ ] Cobertura global ≥ 90% líneas / 80% funciones",
    "nombre": "[ ] Cobertura global ≥ 90% líneas / 80% funciones",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "global in scripts/audit/audit-global.ts"
  },
  {
    "id": "~10_CHECKLIST_FULL_STRATO.md::2. Implementación de Módulos Clave::[ ] AuthN/AuthZ: Lógica completa de autenticación y autorización",
    "nombre": "[ ] AuthN/AuthZ: Lógica completa de autenticación y autorización",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "completa in scripts/db-seed.ts"
  },
  {
    "id": "~10_CHECKLIST_FULL_STRATO.md::2. Implementación de Módulos Clave::[ ] AuthN/AuthZ: Proteger rutas y crear endpoints de perfil",
    "nombre": "[ ] AuthN/AuthZ: Proteger rutas y crear endpoints de perfil",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "perfil in scripts/db-seed.ts"
  },
  {
    "id": "~10_CHECKLIST_FULL_STRATO.md::2. Implementación de Módulos Clave::[ ] Multi-Tenancy: Aislamiento de datos por tenant (RLS en Supabase)",
    "nombre": "[ ] Multi-Tenancy: Aislamiento de datos por tenant (RLS en Supabase)",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "datos in scripts/db-seed.ts"
  },
  {
    "id": "~10_CHECKLIST_FULL_STRATO.md::2. Implementación de Módulos Clave::[ ] Multi-Tenancy: Validar queries y endpoints multi-tenant",
    "nombre": "[ ] Multi-Tenancy: Validar queries y endpoints multi-tenant",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "Validar in scripts/audit/checklist-audit.ts"
  },
  {
    "id": "~10_CHECKLIST_FULL_STRATO.md::2. Implementación de Módulos Clave::[ ] Billing: Integrar Stripe (planes, pagos, webhooks, enforcement)",
    "nombre": "[ ] Billing: Integrar Stripe (planes, pagos, webhooks, enforcement)",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "Stripe in scripts/audit/checklist-audit.ts"
  },
  {
    "id": "~10_CHECKLIST_FULL_STRATO.md::2. Implementación de Módulos Clave::[ ] Billing: Lógica de upgrade/downgrade y fallback visual",
    "nombre": "[ ] Billing: Lógica de upgrade/downgrade y fallback visual",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "fallback in scripts/audit/verify-logic.ts"
  },
  {
    "id": "~10_CHECKLIST_FULL_STRATO.md::2. Implementación de Módulos Clave::[ ] UI Compartida: Crear/expandir `packages/ui` con componentes y theming",
    "nombre": "[ ] UI Compartida: Crear/expandir `packages/ui` con componentes y theming",
    "logica_verificada": false,
    "fuente_verificacion": "regex",
    "detalle": "No se encontró lógica relevante"
  },
  {
    "id": "~10_CHECKLIST_FULL_STRATO.md::2. Implementación de Módulos Clave::[ ] Admin Dashboard: Implementar panel de control para operadores",
    "nombre": "[ ] Admin Dashboard: Implementar panel de control para operadores",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "para in packages/utils/src/add.ts"
  },
  {
    "id": "~10_CHECKLIST_FULL_STRATO.md::3. Integraciones Estratégicas::[ ] Supabase: Validar conexión, migraciones, seeds y tipos generados",
    "nombre": "[ ] Supabase: Validar conexión, migraciones, seeds y tipos generados",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "Supabase in scripts/db-seed.ts"
  },
  {
    "id": "~10_CHECKLIST_FULL_STRATO.md::3. Integraciones Estratégicas::[ ] Stripe: Validar pagos, webhooks y lógica de enforcement",
    "nombre": "[ ] Stripe: Validar pagos, webhooks y lógica de enforcement",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "Stripe in scripts/audit/checklist-audit.ts"
  },
  {
    "id": "~10_CHECKLIST_FULL_STRATO.md::3. Integraciones Estratégicas::[ ] Resend: Integrar para onboarding y alertas técnicas",
    "nombre": "[ ] Resend: Integrar para onboarding y alertas técnicas",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "para in packages/utils/src/add.ts"
  },
  {
    "id": "~10_CHECKLIST_FULL_STRATO.md::3. Integraciones Estratégicas::[ ] OpenAI: Integrar cliente y lógica de agentes AI",
    "nombre": "[ ] OpenAI: Integrar cliente y lógica de agentes AI",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "OpenAI in scripts/generate-code.ts"
  },
  {
    "id": "~10_CHECKLIST_FULL_STRATO.md::3. Integraciones Estratégicas::[ ] PostHog: Integrar tracking técnico y de producto",
    "nombre": "[ ] PostHog: Integrar tracking técnico y de producto",
    "logica_verificada": false,
    "fuente_verificacion": "regex",
    "detalle": "No se encontró lógica relevante"
  },
  {
    "id": "~10_CHECKLIST_FULL_STRATO.md::4. Clonabilidad y Automatización::[ ] Completar y testear `create-saas-clone.ts` y `scripts/init-project.ts`",
    "nombre": "[ ] Completar y testear `create-saas-clone.ts` y `scripts/init-project.ts`",
    "logica_verificada": false,
    "fuente_verificacion": "regex",
    "detalle": "No se encontró lógica relevante"
  },
  {
    "id": "~10_CHECKLIST_FULL_STRATO.md::4. Clonabilidad y Automatización::[ ] Crear y documentar templates de configuración y branding",
    "nombre": "[ ] Crear y documentar templates de configuración y branding",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "Crear in scripts/init-project.ts"
  },
  {
    "id": "~10_CHECKLIST_FULL_STRATO.md::4. Clonabilidad y Automatización::[ ] Validar proceso de clonación y actualización de workspaces",
    "nombre": "[ ] Validar proceso de clonación y actualización de workspaces",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "workspaces in scripts/create-saas-clone.ts"
  },
  {
    "id": "~10_CHECKLIST_FULL_STRATO.md::5. Reporting, Dashboard y Auditoría::[ ] Implementar dashboard STRATO CONTROL TOWER™",
    "nombre": "[ ] Implementar dashboard STRATO CONTROL TOWER™",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "STRATO in scripts/angel-vigilante.ts"
  },
  {
    "id": "~10_CHECKLIST_FULL_STRATO.md::5. Reporting, Dashboard y Auditoría::[ ] Automatizar generación de reportes de sanidad y coverage",
    "nombre": "[ ] Automatizar generación de reportes de sanidad y coverage",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "coverage in scripts/audit-module.ts"
  },
  {
    "id": "~10_CHECKLIST_FULL_STRATO.md::5. Reporting, Dashboard y Auditoría::[ ] Integrar alertas a Slack/Notion (opcional)",
    "nombre": "[ ] Integrar alertas a Slack/Notion (opcional)",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "opcional in scripts/db-seed.ts"
  },
  {
    "id": "~10_CHECKLIST_FULL_STRATO.md::6. Documentación y Scorecard::[ ] Actualizar README, roadmaps y scorecard tras cada avance",
    "nombre": "[ ] Actualizar README, roadmaps y scorecard tras cada avance",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "Actualizar in scripts/init-project.ts"
  },
  {
    "id": "~10_CHECKLIST_FULL_STRATO.md::6. Documentación y Scorecard::[ ] Documentar cada módulo, integración y script",
    "nombre": "[ ] Documentar cada módulo, integración y script",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "script in scripts/audit-module.ts"
  },
  {
    "id": "~10_CHECKLIST_FULL_STRATO.md::6. Documentación y Scorecard::[ ] Mantener checklist pre-deploy y coverage actualizado",
    "nombre": "[ ] Mantener checklist pre-deploy y coverage actualizado",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "coverage in scripts/audit-module.ts"
  },
  {
    "id": "~10_CHECKLIST_FULL_STRATO.md::7. Validaciones y Blindaje Final::[ ] Validar `.strato-manifest.json` con todas las rutas y convenciones",
    "nombre": "[ ] Validar `.strato-manifest.json` con todas las rutas y convenciones",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "rutas in scripts/agents/context-watchdog.ts"
  },
  {
    "id": "~10_CHECKLIST_FULL_STRATO.md::7. Validaciones y Blindaje Final::[ ] Ejecutar `pnpm audit:full` y `scripts/validate-clean-system.ts` antes de cada release",
    "nombre": "[ ] Ejecutar `pnpm audit:full` y `scripts/validate-clean-system.ts` antes de cada release",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "pnpm in scripts/create-saas-clone.ts"
  },
  {
    "id": "~10_CHECKLIST_FULL_STRATO.md::7. Validaciones y Blindaje Final::[ ] Validar hooks (pre-commit, pre-push) y CI/CD bloqueando cualquier error",
    "nombre": "[ ] Validar hooks (pre-commit, pre-push) y CI/CD bloqueando cualquier error",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "error in scripts/audit-module.ts"
  },
  {
    "id": "~1_BACKEND_ROADMAP.md::PASO 1 – Infraestructura Base Blindada::[x] Crear carpeta `/backend/` con estructura clara: `/routes`, `/middleware`, `/services`, `/tests`.",
    "nombre": "[x] Crear carpeta `/backend/` con estructura clara: `/routes`, `/middleware`, `/services`, `/tests`.",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "backend in scripts/angel-vigilante.ts"
  },
  {
    "id": "~1_BACKEND_ROADMAP.md::PASO 1 – Infraestructura Base Blindada::[ ] Estructura pendiente: `/lib`, `/validators`, `/types`.",
    "nombre": "[ ] Estructura pendiente: `/lib`, `/validators`, `/types`.",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "types in packages/db-types/src/index.ts"
  },
  {
    "id": "~1_BACKEND_ROADMAP.md::PASO 1 – Infraestructura Base Blindada::[x] Inicializar `tsconfig.json` estricto y `vitest.config.ts`.",
    "nombre": "[x] Inicializar `tsconfig.json` estricto y `vitest.config.ts`.",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "estricto in scripts/audit/extract-audit.ts"
  },
  {
    "id": "~1_BACKEND_ROADMAP.md::PASO 1 – Infraestructura Base Blindada::[ ] Instalar dependencias críticas: `zod`, `vitest`, `supertest`, `@supabase/supabase-js`, `stripe`, `resend`, `openai`, `dotenv`, etc.",
    "nombre": "[ ] Instalar dependencias críticas: `zod`, `vitest`, `supertest`, `@supabase/supabase-js`, `stripe`, `resend`, `openai`, `dotenv`, etc.",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "vitest in packages/utils/src/add.test.ts"
  },
  {
    "id": "~1_BACKEND_ROADMAP.md::PASO 2 – Sistema de Enrutamiento Modular::[ ] Crear un `router.ts` central que despache requests a rutas por módulo (`/auth`, `/billing`, `/launch`, etc.).",
    "nombre": "[ ] Crear un `router.ts` central que despache requests a rutas por módulo (`/auth`, `/billing`, `/launch`, etc.).",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "central in scripts/audit-module.ts"
  },
  {
    "id": "~1_BACKEND_ROADMAP.md::PASO 2 – Sistema de Enrutamiento Modular::[x] Cada archivo en `/routes/` tendrá su endpoint y middleware asociado (iniciado con `health.routes.ts`).",
    "nombre": "[x] Cada archivo en `/routes/` tendrá su endpoint y middleware asociado (iniciado con `health.routes.ts`).",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "archivo in scripts/generate-code.ts"
  },
  {
    "id": "~1_BACKEND_ROADMAP.md::PASO 2 – Sistema de Enrutamiento Modular::[ ] Agregar `createRouter()` con inyección de dependencias para testeo desacoplado.",
    "nombre": "[ ] Agregar `createRouter()` con inyección de dependencias para testeo desacoplado.",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "para in packages/utils/src/add.ts"
  },
  {
    "id": "~1_BACKEND_ROADMAP.md::PASO 3 – Middleware de Validación y Seguridad::[ ] `middleware/auth.ts` para validación de JWT Supabase.",
    "nombre": "[ ] `middleware/auth.ts` para validación de JWT Supabase.",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "para in packages/utils/src/add.ts"
  },
  {
    "id": "~1_BACKEND_ROADMAP.md::PASO 3 – Middleware de Validación y Seguridad::[ ] `middleware/rateLimit.ts` con defensa contra spam.",
    "nombre": "[ ] `middleware/rateLimit.ts` con defensa contra spam.",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "contra in scripts/validate-module.ts"
  },
  {
    "id": "~1_BACKEND_ROADMAP.md::PASO 3 – Middleware de Validación y Seguridad::[x] `middleware/errorHandler.ts` para capturar fallos estructurados.",
    "nombre": "[x] `middleware/errorHandler.ts` para capturar fallos estructurados.",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "para in packages/utils/src/add.ts"
  },
  {
    "id": "~1_BACKEND_ROADMAP.md::PASO 3 – Middleware de Validación y Seguridad::[ ] Conectar Zod a todos los inputs (`validators/*.ts`).",
    "nombre": "[ ] Conectar Zod a todos los inputs (`validators/*.ts`).",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "todos in packages/db-types/src/index.ts"
  },
  {
    "id": "~1_BACKEND_ROADMAP.md::PASO 4 – Integraciones Externas Operativas::[ ] Configurar conexión a Supabase (auth y DB).",
    "nombre": "[ ] Configurar conexión a Supabase (auth y DB).",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "Supabase in scripts/db-seed.ts"
  },
  {
    "id": "~1_BACKEND_ROADMAP.md::PASO 4 – Integraciones Externas Operativas::[ ] Integrar Stripe con claves dummy + modo de pruebas activado.",
    "nombre": "[ ] Integrar Stripe con claves dummy + modo de pruebas activado.",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "modo in scripts/agents/context-watchdog.watch.ts"
  },
  {
    "id": "~1_BACKEND_ROADMAP.md::PASO 4 – Integraciones Externas Operativas::[ ] Integrar Resend para envíos controlados.",
    "nombre": "[ ] Integrar Resend para envíos controlados.",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "para in packages/utils/src/add.ts"
  },
  {
    "id": "~1_BACKEND_ROADMAP.md::PASO 4 – Integraciones Externas Operativas::[ ] Integrar OpenAI con fallback local.",
    "nombre": "[ ] Integrar OpenAI con fallback local.",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "OpenAI in scripts/generate-code.ts"
  },
  {
    "id": "~1_BACKEND_ROADMAP.md::PASO 4 – Integraciones Externas Operativas::[ ] Conectar PostHog para tracking técnico.",
    "nombre": "[ ] Conectar PostHog para tracking técnico.",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "para in packages/utils/src/add.ts"
  },
  {
    "id": "~1_BACKEND_ROADMAP.md::PASO 5 – Sistema de Billing Modular::[ ] Crear `billingService.ts` con:",
    "nombre": "[ ] Crear `billingService.ts` con:",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "con in packages/db-types/src/index.ts"
  },
  {
    "id": "~1_BACKEND_ROADMAP.md::PASO 5 – Sistema de Billing Modular::[ ] Creación y sincronización de clientes.",
    "nombre": "[ ] Creación y sincronización de clientes.",
    "logica_verificada": false,
    "fuente_verificacion": "regex",
    "detalle": "No se encontró lógica relevante"
  },
  {
    "id": "~1_BACKEND_ROADMAP.md::PASO 5 – Sistema de Billing Modular::[ ] Validación de suscripción activa.",
    "nombre": "[ ] Validación de suscripción activa.",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "activa in scripts/create-saas-clone.ts"
  },
  {
    "id": "~1_BACKEND_ROADMAP.md::PASO 5 – Sistema de Billing Modular::[ ] Webhooks de Stripe (`/webhooks/stripe`).",
    "nombre": "[ ] Webhooks de Stripe (`/webhooks/stripe`).",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "Stripe in scripts/audit/checklist-audit.ts"
  },
  {
    "id": "~1_BACKEND_ROADMAP.md::PASO 5 – Sistema de Billing Modular::[ ] Incluir lógica de `enforcement.ts` que restringe features por plan.",
    "nombre": "[ ] Incluir lógica de `enforcement.ts` que restringe features por plan.",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "features in scripts/validate-test-templates.ts"
  },
  {
    "id": "~1_BACKEND_ROADMAP.md::PASO 6 – Lógica Modular por Módulo (ej. Campaigns)::[ ] Crear módulo `/routes/campaigns.ts`.",
    "nombre": "[ ] Crear módulo `/routes/campaigns.ts`.",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "Crear in scripts/init-project.ts"
  },
  {
    "id": "~1_BACKEND_ROADMAP.md::PASO 6 – Lógica Modular por Módulo (ej. Campaigns)::[ ] Conectar a base de datos Supabase.",
    "nombre": "[ ] Conectar a base de datos Supabase.",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "base in packages/db-types/src/index.ts"
  },
  {
    "id": "~1_BACKEND_ROADMAP.md::PASO 6 – Lógica Modular por Módulo (ej. Campaigns)::[ ] Agregar endpoints: `GET /campaigns`, `POST /campaign`, `PUT`, `DELETE`.",
    "nombre": "[ ] Agregar endpoints: `GET /campaigns`, `POST /campaign`, `PUT`, `DELETE`.",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "GET in packages/utils/src/add.ts"
  },
  {
    "id": "~1_BACKEND_ROADMAP.md::PASO 6 – Lógica Modular por Módulo (ej. Campaigns)::[ ] Validar con Zod.",
    "nombre": "[ ] Validar con Zod.",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "Zod in scripts/validate-env.ts"
  },
  {
    "id": "~1_BACKEND_ROADMAP.md::PASO 6 – Lógica Modular por Módulo (ej. Campaigns)::[ ] Agregar lógica AI opcional vía OpenAI.",
    "nombre": "[ ] Agregar lógica AI opcional vía OpenAI.",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "opcional in scripts/db-seed.ts"
  },
  {
    "id": "~1_BACKEND_ROADMAP.md::PASO 6 – Lógica Modular por Módulo (ej. Campaigns)::[ ] Conectar a PostHog para tracking.",
    "nombre": "[ ] Conectar a PostHog para tracking.",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "para in packages/utils/src/add.ts"
  },
  {
    "id": "~1_BACKEND_ROADMAP.md::PASO 7 – Suite de Tests Total (Unitarios + Integración)::[x] Crear tests unitarios por servicio, endpoint y validación (Vitest + mocks) - (Iniciado).",
    "nombre": "[x] Crear tests unitarios por servicio, endpoint y validación (Vitest + mocks) - (Iniciado).",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "Vitest in packages/utils/src/add.test.ts"
  },
  {
    "id": "~1_BACKEND_ROADMAP.md::PASO 7 – Suite de Tests Total (Unitarios + Integración)::[x] Crear tests de integración con `supertest` - (Iniciado).",
    "nombre": "[x] Crear tests de integración con `supertest` - (Iniciado).",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "Crear in scripts/init-project.ts"
  },
  {
    "id": "~1_BACKEND_ROADMAP.md::PASO 7 – Suite de Tests Total (Unitarios + Integración)::[ ] Usar fixtures de datos dummy (ej: usuarios, planes, campañas).",
    "nombre": "[ ] Usar fixtures de datos dummy (ej: usuarios, planes, campañas).",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "ej in scripts/audit-module.ts"
  },
  {
    "id": "~1_BACKEND_ROADMAP.md::PASO 7 – Suite de Tests Total (Unitarios + Integración)::[x] Ejecutar en CI o `preflight-check`.",
    "nombre": "[x] Ejecutar en CI o `preflight-check`.",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "preflightcheck in scripts/night-watchman.ts"
  },
  {
    "id": "~1_BACKEND_ROADMAP.md::PASO 8 – Sistema de Logs, Alerts y Auditoría::[x] Crear `logger.ts` estructurado con niveles (info, error, warn).",
    "nombre": "[x] Crear `logger.ts` estructurado con niveles (info, error, warn).",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "error in scripts/audit-module.ts"
  },
  {
    "id": "~1_BACKEND_ROADMAP.md::PASO 8 – Sistema de Logs, Alerts y Auditoría::[x] Guardar logs en consola.",
    "nombre": "[x] Guardar logs en consola.",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "logs in scripts/agents/strato.logic.ts"
  },
  {
    "id": "~1_BACKEND_ROADMAP.md::PASO 8 – Sistema de Logs, Alerts y Auditoría::[ ] Conectar logs a PostHog.",
    "nombre": "[ ] Conectar logs a PostHog.",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "logs in scripts/agents/strato.logic.ts"
  },
  {
    "id": "~1_BACKEND_ROADMAP.md::PASO 8 – Sistema de Logs, Alerts y Auditoría::[ ] Integrar sistema de bitácora (`auditLog.ts`) que registre acciones clave (login, pago, deploy).",
    "nombre": "[ ] Integrar sistema de bitácora (`auditLog.ts`) que registre acciones clave (login, pago, deploy).",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "sistema in scripts/agents/context-watchdog.watch.ts"
  },
  {
    "id": "~1_BACKEND_ROADMAP.md::PASO 9 – Validaciones Automáticas y CLI Interna::[ ] Crear `validate-backend.ts` que revise:",
    "nombre": "[ ] Crear `validate-backend.ts` que revise:",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "Crear in scripts/init-project.ts"
  },
  {
    "id": "~1_BACKEND_ROADMAP.md::PASO 9 – Validaciones Automáticas y CLI Interna::[ ] `.env` completo y sin claves dummy.",
    "nombre": "[ ] `.env` completo y sin claves dummy.",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "env in scripts/db-seed.ts"
  },
  {
    "id": "~1_BACKEND_ROADMAP.md::PASO 9 – Validaciones Automáticas y CLI Interna::[ ] Tipos correctos.",
    "nombre": "[ ] Tipos correctos.",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "Tipos in scripts/audit/audit-global.ts"
  },
  {
    "id": "~1_BACKEND_ROADMAP.md::PASO 9 – Validaciones Automáticas y CLI Interna::[ ] Endpoints funcionales.",
    "nombre": "[ ] Endpoints funcionales.",
    "logica_verificada": false,
    "fuente_verificacion": "regex",
    "detalle": "No se encontró lógica relevante"
  },
  {
    "id": "~1_BACKEND_ROADMAP.md::PASO 9 – Validaciones Automáticas y CLI Interna::[ ] Tests ejecutables.",
    "nombre": "[ ] Tests ejecutables.",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "Tests in scripts/report-status.ts"
  },
  {
    "id": "~1_BACKEND_ROADMAP.md::PASO 9 – Validaciones Automáticas y CLI Interna::[ ] Agregar a CLI: `pnpm strato validate-backend`.",
    "nombre": "[ ] Agregar a CLI: `pnpm strato validate-backend`.",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "strato in scripts/angel-vigilante.ts"
  },
  {
    "id": "~1_BACKEND_ROADMAP.md::PASO 10 – Snapshot, Rollback y Deploy Ready::[ ] Crear script `generate-backend-snapshot.ts`.",
    "nombre": "[ ] Crear script `generate-backend-snapshot.ts`.",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "script in scripts/audit-module.ts"
  },
  {
    "id": "~1_BACKEND_ROADMAP.md::PASO 10 – Snapshot, Rollback y Deploy Ready::[ ] Crear `rollback-backend.ts` para volver a último estado válido.",
    "nombre": "[ ] Crear `rollback-backend.ts` para volver a último estado válido.",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "para in packages/utils/src/add.ts"
  },
  {
    "id": "~1_BACKEND_ROADMAP.md::PASO 10 – Snapshot, Rollback y Deploy Ready::[ ] Validar deploy a Vercel o serverless (ej. edge functions o API Route).",
    "nombre": "[ ] Validar deploy a Vercel o serverless (ej. edge functions o API Route).",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "functions in packages/db-types/src/index.ts"
  },
  {
    "id": "~1_BACKEND_ROADMAP.md::PASO 10 – Snapshot, Rollback y Deploy Ready::[ ] Preparar `backend/.env.example` y CI de staging.",
    "nombre": "[ ] Preparar `backend/.env.example` y CI de staging.",
    "logica_verificada": false,
    "fuente_verificacion": "regex",
    "detalle": "No se encontró lógica relevante"
  },
  {
    "id": "~1_BACKEND_ROADMAP.md::ENTREGABLE FINAL (STRATO BACKEND MOTOR™)::[ ] `/backend/` modularizado, validado, protegido.",
    "nombre": "[ ] `/backend/` modularizado, validado, protegido.",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "backend in scripts/angel-vigilante.ts"
  },
  {
    "id": "~1_BACKEND_ROADMAP.md::ENTREGABLE FINAL (STRATO BACKEND MOTOR™)::[ ] Servicios listos para producción (auth, billing, campaigns, AI, email).",
    "nombre": "[ ] Servicios listos para producción (auth, billing, campaigns, AI, email).",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "email in packages/db-types/src/index.ts"
  },
  {
    "id": "~1_BACKEND_ROADMAP.md::ENTREGABLE FINAL (STRATO BACKEND MOTOR™)::[ ] Testeado al 100%.",
    "nombre": "[ ] Testeado al 100%.",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "100 in scripts/audit/generate-core-audit.ts"
  },
  {
    "id": "~1_BACKEND_ROADMAP.md::ENTREGABLE FINAL (STRATO BACKEND MOTOR™)::[ ] Con defensa legal, técnica, financiera y operativa.",
    "nombre": "[ ] Con defensa legal, técnica, financiera y operativa.",
    "logica_verificada": false,
    "fuente_verificacion": "regex",
    "detalle": "No se encontró lógica relevante"
  },
  {
    "id": "~1_BACKEND_ROADMAP.md::ENTREGABLE FINAL (STRATO BACKEND MOTOR™)::[ ] Exportable, clonable y escalable.",
    "nombre": "[ ] Exportable, clonable y escalable.",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "clonable in scripts/angel-vigilante.ts"
  },
  {
    "id": "~2_CHECKLIST_PRE_DEPLOY.md::1. Builds limpias::[ ] `pnpm --filter web build` (Frontend)",
    "nombre": "[ ] `pnpm --filter web build` (Frontend)",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "Frontend in scripts/angel-vigilante.ts"
  },
  {
    "id": "~2_CHECKLIST_PRE_DEPLOY.md::1. Builds limpias::[ ] `pnpm --filter backend build` (Backend)",
    "nombre": "[ ] `pnpm --filter backend build` (Backend)",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "backend in scripts/angel-vigilante.ts"
  },
  {
    "id": "~2_CHECKLIST_PRE_DEPLOY.md::2. Tests automáticos::[ ] `pnpm --filter web test:ui`",
    "nombre": "[ ] `pnpm --filter web test:ui`",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "pnpm in scripts/create-saas-clone.ts"
  },
  {
    "id": "~2_CHECKLIST_PRE_DEPLOY.md::2. Tests automáticos::[ ] `pnpm --filter web test:e2e`",
    "nombre": "[ ] `pnpm --filter web test:e2e`",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "pnpm in scripts/create-saas-clone.ts"
  },
  {
    "id": "~2_CHECKLIST_PRE_DEPLOY.md::2. Tests automáticos::[ ] `pnpm --filter backend test`",
    "nombre": "[ ] `pnpm --filter backend test`",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "test in packages/utils/src/add.test.ts"
  },
  {
    "id": "~2_CHECKLIST_PRE_DEPLOY.md::2. Tests automáticos::[ ] Revisar cobertura (coverage) si está configurado",
    "nombre": "[ ] Revisar cobertura (coverage) si está configurado",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "est in packages/utils/src/add.test.ts"
  },
  {
    "id": "~2_CHECKLIST_PRE_DEPLOY.md::3. Lint y formato::[ ] `pnpm --filter web lint`",
    "nombre": "[ ] `pnpm --filter web lint`",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "lint in scripts/audit-module.ts"
  },
  {
    "id": "~2_CHECKLIST_PRE_DEPLOY.md::3. Lint y formato::[ ] `pnpm --filter backend lint` (si existe)",
    "nombre": "[ ] `pnpm --filter backend lint` (si existe)",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "backend in scripts/angel-vigilante.ts"
  },
  {
    "id": "~2_CHECKLIST_PRE_DEPLOY.md::3. Lint y formato::[ ] `pnpm format` o Prettier (si existe)",
    "nombre": "[ ] `pnpm format` o Prettier (si existe)",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "pnpm in scripts/create-saas-clone.ts"
  },
  {
    "id": "~2_CHECKLIST_PRE_DEPLOY.md::4. TypeScript estricto::[ ] `pnpm --filter web tsc --noEmit`",
    "nombre": "[ ] `pnpm --filter web tsc --noEmit`",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "pnpm in scripts/create-saas-clone.ts"
  },
  {
    "id": "~2_CHECKLIST_PRE_DEPLOY.md::4. TypeScript estricto::[ ] `pnpm --filter backend tsc --noEmit`",
    "nombre": "[ ] `pnpm --filter backend tsc --noEmit`",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "backend in scripts/angel-vigilante.ts"
  },
  {
    "id": "~2_CHECKLIST_PRE_DEPLOY.md::5. Dependencias::[ ] Sin dependencias duplicadas ni warnings de seguridad",
    "nombre": "[ ] Sin dependencias duplicadas ni warnings de seguridad",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "dependencias in scripts/audit/audit-dependencies.ts"
  },
  {
    "id": "~2_CHECKLIST_PRE_DEPLOY.md::5. Dependencias::[ ] `pnpm install` no muestra errores",
    "nombre": "[ ] `pnpm install` no muestra errores",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "pnpm in scripts/create-saas-clone.ts"
  },
  {
    "id": "~2_CHECKLIST_PRE_DEPLOY.md::6. Variables de entorno::[ ] `.env.example` actualizado",
    "nombre": "[ ] `.env.example` actualizado",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "actualizado in scripts/db-seed.ts"
  },
  {
    "id": "~2_CHECKLIST_PRE_DEPLOY.md::6. Variables de entorno::[ ] `.env` con todos los valores requeridos para backend y frontend",
    "nombre": "[ ] `.env` con todos los valores requeridos para backend y frontend",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "todos in packages/db-types/src/index.ts"
  },
  {
    "id": "~2_CHECKLIST_PRE_DEPLOY.md::7. Archivos y estructura::[ ] Sin archivos temporales, logs, ni basura en el repo",
    "nombre": "[ ] Sin archivos temporales, logs, ni basura en el repo",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "repo in scripts/angel-vigilante.ts"
  },
  {
    "id": "~2_CHECKLIST_PRE_DEPLOY.md::7. Archivos y estructura::[ ] `.gitignore` bien configurado",
    "nombre": "[ ] `.gitignore` bien configurado",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "bien in scripts/generate-code.ts"
  },
  {
    "id": "~2_CHECKLIST_PRE_DEPLOY.md::8. Readme y documentación::[ ] `README.md` actualizado",
    "nombre": "[ ] `README.md` actualizado",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "actualizado in scripts/db-seed.ts"
  },
  {
    "id": "~2_CHECKLIST_PRE_DEPLOY.md::8. Readme y documentación::[ ] Roadmaps y scorecards presentes",
    "nombre": "[ ] Roadmaps y scorecards presentes",
    "logica_verificada": false,
    "fuente_verificacion": "regex",
    "detalle": "No se encontró lógica relevante"
  },
  {
    "id": "~2_CHECKLIST_PRE_DEPLOY.md::9. CI/CD::[ ] Workflows de GitHub Actions o similar configurados (opcional, pero recomendado)",
    "nombre": "[ ] Workflows de GitHub Actions o similar configurados (opcional, pero recomendado)",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "opcional in scripts/db-seed.ts"
  },
  {
    "id": "~3_MATRIX_ROADMAP.md::✅ Fase 0: Planificación (Commit: `docs: create saas matrix transformation roadmap`)::[x] Crear este archivo `MATRIX_ROADMAP.md` para documentar y seguir el progreso.",
    "nombre": "[x] Crear este archivo `MATRIX_ROADMAP.md` para documentar y seguir el progreso.",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "para in packages/utils/src/add.ts"
  },
  {
    "id": "~3_MATRIX_ROADMAP.md::Fase 1: Completar y Generalizar el Núcleo de Funcionalidades::**1.1: Implementar Middleware de Autenticación**",
    "nombre": "**1.1: Implementar Middleware de Autenticación**",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "11 in scripts/audit/checklist-audit.ts"
  },
  {
    "id": "~3_MATRIX_ROADMAP.md::Fase 1: Completar y Generalizar el Núcleo de Funcionalidades::**1.2: Proteger Rutas y Crear Rutas de Perfil**",
    "nombre": "**1.2: Proteger Rutas y Crear Rutas de Perfil**",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "Perfil in scripts/db-seed.ts"
  },
  {
    "id": "~3_MATRIX_ROADMAP.md::Fase 1: Completar y Generalizar el Núcleo de Funcionalidades::**1.3: Refactorizar `users` a `profiles`**",
    "nombre": "**1.3: Refactorizar `users` a `profiles`**",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "users in packages/db-types/src/index.ts"
  },
  {
    "id": "~3_MATRIX_ROADMAP.md::Fase 2: Automatización y Experiencia de Desarrollador (DX)::**2.1: Script de Inicialización de Proyecto**",
    "nombre": "**2.1: Script de Inicialización de Proyecto**",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "Script in scripts/audit-module.ts"
  },
  {
    "id": "~3_MATRIX_ROADMAP.md::Fase 2: Automatización y Experiencia de Desarrollador (DX)::**2.2: Seeding de Base de Datos**",
    "nombre": "**2.2: Seeding de Base de Datos**",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "Base in packages/db-types/src/index.ts"
  },
  {
    "id": "~3_MATRIX_ROADMAP.md::Fase 3: Documentación Exhaustiva::**3.1: Crear `TEMPLATE_README.md`**",
    "nombre": "**3.1: Crear `TEMPLATE_README.md`**",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "Crear in scripts/init-project.ts"
  },
  {
    "id": "~3_MATRIX_ROADMAP.md::Fase 4: Finalización y Distribución::**4.1: Limpieza Final**",
    "nombre": "**4.1: Limpieza Final**",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "Final in scripts/init-project.ts"
  },
  {
    "id": "~3_MATRIX_ROADMAP.md::Fase 4: Finalización y Distribución::**4.2: Convertir a Repositorio Plantilla de GitHub**",
    "nombre": "**4.2: Convertir a Repositorio Plantilla de GitHub**",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "GitHub in scripts/report-strato-defense.ts"
  },
  {
    "id": "~4_PLAYBOOK_RULES.md::**(STACK OFICIAL – 50 YES)**::Usa pnpm con pnpm-workspace.yaml bien definido",
    "nombre": "Usa pnpm con pnpm-workspace.yaml bien definido",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "pnpm in scripts/create-saas-clone.ts"
  },
  {
    "id": "~4_PLAYBOOK_RULES.md::**(STACK OFICIAL – 50 YES)**::Configura un tsconfig.base.json en la raíz y extiéndelo en todos los módulos",
    "nombre": "Configura un tsconfig.base.json en la raíz y extiéndelo en todos los módulos",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "todos in packages/db-types/src/index.ts"
  },
  {
    "id": "~4_PLAYBOOK_RULES.md::**(STACK OFICIAL – 50 YES)**::Usa tsx para ejecutar archivos .ts sin transpilar",
    "nombre": "Usa tsx para ejecutar archivos .ts sin transpilar",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "para in packages/utils/src/add.ts"
  },
  {
    "id": "~4_PLAYBOOK_RULES.md::**(STACK OFICIAL – 50 YES)**::Usa vitest solo en frontend o utils (no en backend)",
    "nombre": "Usa vitest solo en frontend o utils (no en backend)",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "vitest in packages/utils/src/add.test.ts"
  },
  {
    "id": "~4_PLAYBOOK_RULES.md::**(STACK OFICIAL – 50 YES)**::Para backend, usa tsup o tsc como bundler",
    "nombre": "Para backend, usa tsup o tsc como bundler",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "Para in packages/utils/src/add.ts"
  },
  {
    "id": "~4_PLAYBOOK_RULES.md::**(STACK OFICIAL – 50 YES)**::Estructura como monorepo: frontend/, backend/, packages/, agents/",
    "nombre": "Estructura como monorepo: frontend/, backend/, packages/, agents/",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "frontend in scripts/angel-vigilante.ts"
  },
  {
    "id": "~4_PLAYBOOK_RULES.md::**(STACK OFICIAL – 50 YES)**::Cada módulo debe tener su propio package.json, tsconfig.json, vitest.config.ts (si aplica)",
    "nombre": "Cada módulo debe tener su propio package.json, tsconfig.json, vitest.config.ts (si aplica)",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "packagejson in scripts/audit-module.ts"
  },
  {
    "id": "~4_PLAYBOOK_RULES.md::**(STACK OFICIAL – 50 YES)**::Usa zod como validador único de esquema",
    "nombre": "Usa zod como validador único de esquema",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "como in scripts/audit/checklist-audit.ts"
  },
  {
    "id": "~4_PLAYBOOK_RULES.md::**(STACK OFICIAL – 50 YES)**::Usa shadcn/ui con TailwindCSS para el frontend",
    "nombre": "Usa shadcn/ui con TailwindCSS para el frontend",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "para in packages/utils/src/add.ts"
  },
  {
    "id": "~4_PLAYBOOK_RULES.md::**(STACK OFICIAL – 50 YES)**::Usa clsx para composición de clases",
    "nombre": "Usa clsx para composición de clases",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "para in packages/utils/src/add.ts"
  },
  {
    "id": "~4_PLAYBOOK_RULES.md::**(STACK OFICIAL – 50 YES)**::Integra turbo para orquestación de scripts (test, build, lint)",
    "nombre": "Integra turbo para orquestación de scripts (test, build, lint)",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "test in packages/utils/src/add.test.ts"
  },
  {
    "id": "~4_PLAYBOOK_RULES.md::**(STACK OFICIAL – 50 YES)**::Ejecuta pnpm audit:full como script único de validación",
    "nombre": "Ejecuta pnpm audit:full como script único de validación",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "script in scripts/audit-module.ts"
  },
  {
    "id": "~4_PLAYBOOK_RULES.md::**(STACK OFICIAL – 50 YES)**::Integra audit:full en CI/CD como paso obligatorio",
    "nombre": "Integra audit:full en CI/CD como paso obligatorio",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "Integra in scripts/audit/checklist-audit.ts"
  },
  {
    "id": "~4_PLAYBOOK_RULES.md::**(STACK OFICIAL – 50 YES)**::Usa @repo/typescript-config, @repo/eslint-config como paquetes centrales",
    "nombre": "Usa @repo/typescript-config, @repo/eslint-config como paquetes centrales",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "paquetes in scripts/audit/audit-dependencies.ts"
  },
  {
    "id": "~4_PLAYBOOK_RULES.md::**(STACK OFICIAL – 50 YES)**::Usa eslint con parsing basado en parserOptions.project",
    "nombre": "Usa eslint con parsing basado en parserOptions.project",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "eslint in scripts/audit-module.ts"
  },
  {
    "id": "~4_PLAYBOOK_RULES.md::**(STACK OFICIAL – 50 YES)**::Tipado estricto en todo el sistema (noImplicitAny, strict, noUncheckedIndexAccess)",
    "nombre": "Tipado estricto en todo el sistema (noImplicitAny, strict, noUncheckedIndexAccess)",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "todo in packages/db-types/src/index.ts"
  },
  {
    "id": "~4_PLAYBOOK_RULES.md::**(STACK OFICIAL – 50 YES)**::Tests en todos los módulos, mínimo 1 por agente",
    "nombre": "Tests en todos los módulos, mínimo 1 por agente",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "todos in packages/db-types/src/index.ts"
  },
  {
    "id": "~4_PLAYBOOK_RULES.md::**(STACK OFICIAL – 50 YES)**::Cero any, eslint-disable, @ts-ignore (auditable)",
    "nombre": "Cero any, eslint-disable, @ts-ignore (auditable)",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "auditable in scripts/audit/extract-audit.ts"
  },
  {
    "id": "~4_PLAYBOOK_RULES.md::**(STACK OFICIAL – 50 YES)**::Logging estructurado, sin console.log",
    "nombre": "Logging estructurado, sin console.log",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "estructurado in scripts/audit/checklist-audit.ts"
  },
  {
    "id": "~4_PLAYBOOK_RULES.md::**(STACK OFICIAL – 50 YES)**::Rutas con alias (@/modules/...), nunca con ../",
    "nombre": "Rutas con alias (@/modules/...), nunca con ../",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "modules in scripts/angel-vigilante.ts"
  },
  {
    "id": "~4_PLAYBOOK_RULES.md::**(BLACKLIST – 50 NO)**::❌ No uses vitest en backend",
    "nombre": "❌ No uses vitest en backend",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "vitest in packages/utils/src/add.test.ts"
  },
  {
    "id": "~4_PLAYBOOK_RULES.md::**(BLACKLIST – 50 NO)**::❌ No uses vite como bundler backend",
    "nombre": "❌ No uses vite como bundler backend",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "vite in packages/utils/src/add.test.ts"
  },
  {
    "id": "~4_PLAYBOOK_RULES.md::**(BLACKLIST – 50 NO)**::❌ No uses babel, ts-node, esbuild crudo",
    "nombre": "❌ No uses babel, ts-node, esbuild crudo",
    "logica_verificada": false,
    "fuente_verificacion": "regex",
    "detalle": "No se encontró lógica relevante"
  },
  {
    "id": "~4_PLAYBOOK_RULES.md::**(BLACKLIST – 50 NO)**::❌ No uses yarn, npm (solo pnpm)",
    "nombre": "❌ No uses yarn, npm (solo pnpm)",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "pnpm in scripts/create-saas-clone.ts"
  },
  {
    "id": "~4_PLAYBOOK_RULES.md::**(BLACKLIST – 50 NO)**::❌ No uses patch-package",
    "nombre": "❌ No uses patch-package",
    "logica_verificada": false,
    "fuente_verificacion": "regex",
    "detalle": "No se encontró lógica relevante"
  },
  {
    "id": "~4_PLAYBOOK_RULES.md::**(BLACKLIST – 50 NO)**::❌ No uses eslint-disable, @ts-ignore, any",
    "nombre": "❌ No uses eslint-disable, @ts-ignore, any",
    "logica_verificada": false,
    "fuente_verificacion": "regex",
    "detalle": "No se encontró lógica relevante"
  },
  {
    "id": "~4_PLAYBOOK_RULES.md::**(BLACKLIST – 50 NO)**::❌ No uses ../ como rutas de import",
    "nombre": "❌ No uses ../ como rutas de import",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "import in packages/utils/src/add.test.ts"
  },
  {
    "id": "~4_PLAYBOOK_RULES.md::**(BLACKLIST – 50 NO)**::❌ No uses class-validator, typeorm, mongoose sin validación externa",
    "nombre": "❌ No uses class-validator, typeorm, mongoose sin validación externa",
    "logica_verificada": false,
    "fuente_verificacion": "regex",
    "detalle": "No se encontró lógica relevante"
  },
  {
    "id": "~4_PLAYBOOK_RULES.md::**(BLACKLIST – 50 NO)**::❌ No uses UI frameworks cerrados (Chakra, MUI)",
    "nombre": "❌ No uses UI frameworks cerrados (Chakra, MUI)",
    "logica_verificada": false,
    "fuente_verificacion": "regex",
    "detalle": "No se encontró lógica relevante"
  },
  {
    "id": "~4_PLAYBOOK_RULES.md::**(BLACKLIST – 50 NO)**::❌ No uses redux, react-router, recoil, zustand",
    "nombre": "❌ No uses redux, react-router, recoil, zustand",
    "logica_verificada": false,
    "fuente_verificacion": "regex",
    "detalle": "No se encontró lógica relevante"
  },
  {
    "id": "~4_PLAYBOOK_RULES.md::**(BLACKLIST – 50 NO)**::❌ No uses console.log en producción",
    "nombre": "❌ No uses console.log en producción",
    "logica_verificada": false,
    "fuente_verificacion": "regex",
    "detalle": "No se encontró lógica relevante"
  },
  {
    "id": "~4_PLAYBOOK_RULES.md::**(BLACKLIST – 50 NO)**::❌ No uses agentes sin tests ni package.json",
    "nombre": "❌ No uses agentes sin tests ni package.json",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "packagejson in scripts/audit-module.ts"
  },
  {
    "id": "~4_PLAYBOOK_RULES.md::**(BLACKLIST – 50 NO)**::❌ No uses pnpm sin packageManager declarado",
    "nombre": "❌ No uses pnpm sin packageManager declarado",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "pnpm in scripts/create-saas-clone.ts"
  },
  {
    "id": "~4_PLAYBOOK_RULES.md::**(BLACKLIST – 50 NO)**::❌ No uses pnpm sin definir workspaces correctamente",
    "nombre": "❌ No uses pnpm sin definir workspaces correctamente",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "pnpm in scripts/create-saas-clone.ts"
  },
  {
    "id": "~4_PLAYBOOK_RULES.md::**(BLACKLIST – 50 NO)**::❌ No ignores los errores de CI o fallas de audit:full",
    "nombre": "❌ No ignores los errores de CI o fallas de audit:full",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "errores in scripts/validate-module.ts"
  },
  {
    "id": "~4_PLAYBOOK_RULES.md::**(BLACKLIST – 50 NO)**::❌ No permitas CI sin auditoría completa automatizada",
    "nombre": "❌ No permitas CI sin auditoría completa automatizada",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "completa in scripts/db-seed.ts"
  },
  {
    "id": "~4_PLAYBOOK_RULES.md::**(BLACKLIST – 50 NO)**::❌ No uses dependencias sin declarar (require sin import, etc.)",
    "nombre": "❌ No uses dependencias sin declarar (require sin import, etc.)",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "import in packages/utils/src/add.test.ts"
  },
  {
    "id": "~4_PLAYBOOK_RULES.md::**(BLACKLIST – 50 NO)**::❌ No ejecutes node archivo.ts directamente",
    "nombre": "❌ No ejecutes node archivo.ts directamente",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "node in scripts/create-saas-clone.ts"
  },
  {
    "id": "~4_PLAYBOOK_RULES.md::**(BLACKLIST – 50 NO)**::❌ No uses alias no resueltos en tsconfig.json",
    "nombre": "❌ No uses alias no resueltos en tsconfig.json",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "alias in scripts/audit-module.ts"
  },
  {
    "id": "~4_PLAYBOOK_RULES.md::**(BLACKLIST – 50 NO)**::✅ Se permite Vitest en backend y frontend para unificar tooling, acelerar el desarrollo y mejorar la DX. Si surge una limitación real, se reevalúa.",
    "nombre": "✅ Se permite Vitest en backend y frontend para unificar tooling, acelerar el desarrollo y mejorar la DX. Si surge una limitación real, se reevalúa.",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "Vitest in packages/utils/src/add.test.ts"
  },
  {
    "id": "~4_PLAYBOOK_RULES.md::**📌 Instrucciones Finales para el Sistema AI:**::Antes de crear cualquier archivo, valida si las reglas están correctamente inicializadas.",
    "nombre": "Antes de crear cualquier archivo, valida si las reglas están correctamente inicializadas.",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "valida in scripts/audit-module.ts"
  },
  {
    "id": "~4_PLAYBOOK_RULES.md::**📌 Instrucciones Finales para el Sistema AI:**::Si algún paso no se puede ejecutar por problemas estructurales, no continúes. Devuelve un error y explica qué está mal.",
    "nombre": "Si algún paso no se puede ejecutar por problemas estructurales, no continúes. Devuelve un error y explica qué está mal.",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "est in packages/utils/src/add.test.ts"
  },
  {
    "id": "~4_PLAYBOOK_RULES.md::**📌 Instrucciones Finales para el Sistema AI:**::Cada carpeta debe tener tests mínimos, sin ellos el sistema se considera incompleto.",
    "nombre": "Cada carpeta debe tener tests mínimos, sin ellos el sistema se considera incompleto.",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "debe in scripts/generate-code.ts"
  },
  {
    "id": "~4_PLAYBOOK_RULES.md::**📌 Instrucciones Finales para el Sistema AI:**::La primera acción será crear la raíz del monorepo con estructura segura (apps/, packages/, etc.).",
    "nombre": "La primera acción será crear la raíz del monorepo con estructura segura (apps/, packages/, etc.).",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "ser in packages/db-types/src/index.ts"
  },
  {
    "id": "~4_PLAYBOOK_RULES.md::**📌 Instrucciones Finales para el Sistema AI:**::Asegúrate de que la estructura de tipos y la inferencia se mantengan en todo el sistema.",
    "nombre": "Asegúrate de que la estructura de tipos y la inferencia se mantengan en todo el sistema.",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "todo in packages/db-types/src/index.ts"
  },
  {
    "id": "~5_PLAYBOOK.md::**PLAYBOOK STRATO – FUNDADOR SOLO 10/10™**::Guía de inicio limpio para cualquier clon SaaS",
    "nombre": "Guía de inicio limpio para cualquier clon SaaS",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "para in packages/utils/src/add.ts"
  },
  {
    "id": "~5_PLAYBOOK.md::**PLAYBOOK STRATO – FUNDADOR SOLO 10/10™**::Blindaje estructural desde el minuto 1",
    "nombre": "Blindaje estructural desde el minuto 1",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "desde in scripts/generate-code.ts"
  },
  {
    "id": "~5_PLAYBOOK.md::**PLAYBOOK STRATO – FUNDADOR SOLO 10/10™**::Escudo contra deuda técnica, errores invisibles y caos arquitectónico",
    "nombre": "Escudo contra deuda técnica, errores invisibles y caos arquitectónico",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "deuda in scripts/night-watchman.ts"
  },
  {
    "id": "~5_PLAYBOOK.md::**PLAYBOOK STRATO – FUNDADOR SOLO 10/10™**::Manual operativo para ti, agentes AI y cualquier desarrollador que se sume",
    "nombre": "Manual operativo para ti, agentes AI y cualquier desarrollador que se sume",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "para in packages/utils/src/add.ts"
  },
  {
    "id": "~5_PLAYBOOK.md::**SECCIÓN 1 – Setup Base Blindado**::. **Crear repo nuevo con plantilla STRATO Core OS™:**",
    "nombre": ". **Crear repo nuevo con plantilla STRATO Core OS™:**",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "OS in packages/db-types/src/index.ts"
  },
  {
    "id": "~5_PLAYBOOK.md::**SECCIÓN 1 – Setup Base Blindado**::. **Instalar defensas automáticas:**",
    "nombre": ". **Instalar defensas automáticas:**",
    "logica_verificada": false,
    "fuente_verificacion": "regex",
    "detalle": "No se encontró lógica relevante"
  },
  {
    "id": "~5_PLAYBOOK.md::**SECCIÓN 1 – Setup Base Blindado**::. **Configurar CI/CD desde el inicio:**",
    "nombre": ". **Configurar CI/CD desde el inicio:**",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "desde in scripts/generate-code.ts"
  },
  {
    "id": "~5_PLAYBOOK.md::**SECCIÓN 1 – Setup Base Blindado**::. **Conexiones core:**",
    "nombre": ". **Conexiones core:**",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "core in scripts/create-saas-clone.ts"
  },
  {
    "id": "~5_PLAYBOOK.md::**SECCIÓN 2 – Guardias Técnicos Activos**::. **Pre-commit:**",
    "nombre": ". **Pre-commit:**",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "Precommit in scripts/report-strato-defense.ts"
  },
  {
    "id": "~5_PLAYBOOK.md::**SECCIÓN 2 – Guardias Técnicos Activos**::. **CI/CD Layer:**",
    "nombre": ". **CI/CD Layer:**",
    "logica_verificada": false,
    "fuente_verificacion": "regex",
    "detalle": "No se encontró lógica relevante"
  },
  {
    "id": "~5_PLAYBOOK.md::**SECCIÓN 2 – Guardias Técnicos Activos**::. **Runtime Defense System™:**",
    "nombre": ". **Runtime Defense System™:**",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "System in scripts/report-status.ts"
  },
  {
    "id": "~5_PLAYBOOK.md::**SECCIÓN 2 – Guardias Técnicos Activos**::. **Autofix Agents:**",
    "nombre": ". **Autofix Agents:**",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "Agents in scripts/validate-module.ts"
  },
  {
    "id": "~5_PLAYBOOK.md::**SECCIÓN 3 – Estrategia Modular Clonable**::. **Todo módulo debe ser:**",
    "nombre": ". **Todo módulo debe ser:**",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "Todo in packages/db-types/src/index.ts"
  },
  {
    "id": "~5_PLAYBOOK.md::**SECCIÓN 3 – Estrategia Modular Clonable**::. **Cada nuevo SaaS parte con:**",
    "nombre": ". **Cada nuevo SaaS parte con:**",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "con in packages/db-types/src/index.ts"
  },
  {
    "id": "~5_PLAYBOOK.md::**SECCIÓN 4 – Flujo Real de Desarrollo AI-Assistido**::. **Estrategia Prompt a Prompt (Cursor, Copilot, GPT):**",
    "nombre": ". **Estrategia Prompt a Prompt (Cursor, Copilot, GPT):**",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "Prompt in scripts/create-saas-clone.ts"
  },
  {
    "id": "~5_PLAYBOOK.md::**SECCIÓN 4 – Flujo Real de Desarrollo AI-Assistido**::. **Prohibido hacer commits sin haber corrido:**",
    "nombre": ". **Prohibido hacer commits sin haber corrido:**",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "hacer in scripts/generate-code.ts"
  },
  {
    "id": "~5_PLAYBOOK.md::**SECCIÓN 4 – Flujo Real de Desarrollo AI-Assistido**::. **Exploración ≠ Producción:**",
    "nombre": ". **Exploración ≠ Producción:**",
    "logica_verificada": false,
    "fuente_verificacion": "regex",
    "detalle": "No se encontró lógica relevante"
  },
  {
    "id": "~5_PLAYBOOK.md::**SECCIÓN 5 – Validaciones, Reporting y Alertas**::. **Scripts obligatorios por módulo:**",
    "nombre": ". **Scripts obligatorios por módulo:**",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "Scripts in scripts/create-saas-clone.ts"
  },
  {
    "id": "~5_PLAYBOOK.md::**SECCIÓN 5 – Validaciones, Reporting y Alertas**::. **Reporting estructurado:**",
    "nombre": ". **Reporting estructurado:**",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "estructurado in scripts/audit/checklist-audit.ts"
  },
  {
    "id": "~5_PLAYBOOK.md::**SECCIÓN 5 – Validaciones, Reporting y Alertas**::. **Dashboard STRATO CONTROL TOWER™:**",
    "nombre": ". **Dashboard STRATO CONTROL TOWER™:**",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "STRATO in scripts/angel-vigilante.ts"
  },
  {
    "id": "~5_PLAYBOOK.md::**SECCIÓN 6 – Reglas de Oro para el Founder**::. Nunca subestimes un bug oculto en exploración: **te va a costar 5x más después.**",
    "nombre": ". Nunca subestimes un bug oculto en exploración: **te va a costar 5x más después.**",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "te in packages/db-types/src/index.ts"
  },
  {
    "id": "~5_PLAYBOOK.md::**SECCIÓN 6 – Reglas de Oro para el Founder**::. Toda funcionalidad debe tener mínimo un test, una validación y un rollback posible.",
    "nombre": ". Toda funcionalidad debe tener mínimo un test, una validación y un rollback posible.",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "test in packages/utils/src/add.test.ts"
  },
  {
    "id": "~5_PLAYBOOK.md::**SECCIÓN 6 – Reglas de Oro para el Founder**::. **No existe módulo \"simple\" en STRATO.** Todos deben pasar por defensa estructural.",
    "nombre": ". **No existe módulo \"simple\" en STRATO.** Todos deben pasar por defensa estructural.",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "Todos in packages/db-types/src/index.ts"
  },
  {
    "id": "~5_PLAYBOOK.md::**SECCIÓN 6 – Reglas de Oro para el Founder**::. No desarrolles de noche sin CI activo, test mínimo y control de versiones claro.",
    "nombre": ". No desarrolles de noche sin CI activo, test mínimo y control de versiones claro.",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "test in packages/utils/src/add.test.ts"
  },
  {
    "id": "~5_PLAYBOOK.md::**SECCIÓN 6 – Reglas de Oro para el Founder**::. Si una feature tarda más de 2h sin feedback, **detén el avance, ejecuta auditoría y reestructura.**",
    "nombre": ". Si una feature tarda más de 2h sin feedback, **detén el avance, ejecuta auditoría y reestructura.**",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "feature in scripts/validate-test-templates.ts"
  },
  {
    "id": "~5_PLAYBOOK.md::**SECCIÓN 6 – Reglas de Oro para el Founder**::. **Siempre ten al menos un agente validando cada push**: incluso si estás solo.",
    "nombre": ". **Siempre ten al menos un agente validando cada push**: incluso si estás solo.",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "push in scripts/create-saas-clone.ts"
  },
  {
    "id": "~5_PLAYBOOK.md::**SECCIÓN 7 – Desarrollo Funcional Robusto (Frontend y Backend)**::. **Frontend**",
    "nombre": ". **Frontend**",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "Frontend in scripts/angel-vigilante.ts"
  },
  {
    "id": "~5_PLAYBOOK.md::**SECCIÓN 7 – Desarrollo Funcional Robusto (Frontend y Backend)**::. **Backend**",
    "nombre": ". **Backend**",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "Backend in scripts/angel-vigilante.ts"
  },
  {
    "id": "~5_PLAYBOOK.md::**SECCIÓN 7 – Desarrollo Funcional Robusto (Frontend y Backend)**::. **Interconexión API real**",
    "nombre": ". **Interconexión API real**",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "real in scripts/check-blindaje-real.ts"
  },
  {
    "id": "~5_PLAYBOOK.md::**SECCIÓN 8 – Integraciones Estratégicas y Capas de AI**::. **OpenAI / LLM Layer**",
    "nombre": ". **OpenAI / LLM Layer**",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "OpenAI in scripts/generate-code.ts"
  },
  {
    "id": "~5_PLAYBOOK.md::**SECCIÓN 8 – Integraciones Estratégicas y Capas de AI**::. **Integraciones Estratégicas**",
    "nombre": ". **Integraciones Estratégicas**",
    "logica_verificada": false,
    "fuente_verificacion": "regex",
    "detalle": "No se encontró lógica relevante"
  },
  {
    "id": "~5_PLAYBOOK.md::**SECCIÓN 9 – Escalabilidad Real y Multi-SaaS**::. **Soporte multi-tenant:**",
    "nombre": ". **Soporte multi-tenant:**",
    "logica_verificada": false,
    "fuente_verificacion": "regex",
    "detalle": "No se encontró lógica relevante"
  },
  {
    "id": "~5_PLAYBOOK.md::**SECCIÓN 9 – Escalabilidad Real y Multi-SaaS**::. **Sistema de clonación inteligente**",
    "nombre": ". **Sistema de clonación inteligente**",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "Sistema in scripts/agents/context-watchdog.watch.ts"
  },
  {
    "id": "~5_PLAYBOOK.md::**SECCIÓN 9 – Escalabilidad Real y Multi-SaaS**::. **Orquestador de agentes**",
    "nombre": ". **Orquestador de agentes**",
    "logica_verificada": false,
    "fuente_verificacion": "regex",
    "detalle": "No se encontró lógica relevante"
  },
  {
    "id": "~5_PLAYBOOK.md::**SECCIÓN 10 – Comercialización, Pricing y Control Operativo**::. **Planes y precios**",
    "nombre": ". **Planes y precios**",
    "logica_verificada": false,
    "fuente_verificacion": "regex",
    "detalle": "No se encontró lógica relevante"
  },
  {
    "id": "~5_PLAYBOOK.md::**SECCIÓN 10 – Comercialización, Pricing y Control Operativo**::. **Sistema de lanzamientos**",
    "nombre": ". **Sistema de lanzamientos**",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "Sistema in scripts/agents/context-watchdog.watch.ts"
  },
  {
    "id": "~5_PLAYBOOK.md::**SECCIÓN 10 – Comercialización, Pricing y Control Operativo**::. **Métricas y control operativo**",
    "nombre": ". **Métricas y control operativo**",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "control in scripts/audit/checklist-audit.ts"
  },
  {
    "id": "~5_PLAYBOOK.md::**SECCIÓN 10 – Comercialización, Pricing y Control Operativo**::. **Documentación y soporte**",
    "nombre": ". **Documentación y soporte**",
    "logica_verificada": false,
    "fuente_verificacion": "regex",
    "detalle": "No se encontró lógica relevante"
  },
  {
    "id": "~5_PLAYBOOK.md::**SECCIÓN 10 – Comercialización, Pricing y Control Operativo**::Ser autocontenible (carpeta propia con estructura uniforme)",
    "nombre": "Ser autocontenible (carpeta propia con estructura uniforme)",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "estructura in scripts/audit/checklist-audit.ts"
  },
  {
    "id": "~5_PLAYBOOK.md::**SECCIÓN 10 – Comercialización, Pricing y Control Operativo**::Tener sus propios agentes (@refactor, @qa, @docs, etc.)",
    "nombre": "Tener sus propios agentes (@refactor, @qa, @docs, etc.)",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "Tener in scripts/init-project.ts"
  },
  {
    "id": "~5_PLAYBOOK.md::**SECCIÓN 10 – Comercialización, Pricing y Control Operativo**::Contar con tests, endpoints REST o RPC, reporting, validación, CLI y sistema de deploy",
    "nombre": "Contar con tests, endpoints REST o RPC, reporting, validación, CLI y sistema de deploy",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "REST in scripts/audit-module.ts"
  },
  {
    "id": "~5_PLAYBOOK.md::**SECCIÓN 10 – Comercialización, Pricing y Control Operativo**::Tener bitácora y estado de readiness (dev, tested, clone-ready, etc.)",
    "nombre": "Tener bitácora y estado de readiness (dev, tested, clone-ready, etc.)",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "Tener in scripts/init-project.ts"
  },
  {
    "id": "~5_PLAYBOOK.md::**SECCIÓN 10 – Comercialización, Pricing y Control Operativo**::validate-module.ts: chequea estructura, imports, agentes, tests, rutas, prompts, CLI",
    "nombre": "validate-module.ts: chequea estructura, imports, agentes, tests, rutas, prompts, CLI",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "imports in scripts/angel-vigilante.ts"
  },
  {
    "id": "~5_PLAYBOOK.md::**SECCIÓN 10 – Comercialización, Pricing y Control Operativo**::Sistema de versionado y snapshots por módulo",
    "nombre": "Sistema de versionado y snapshots por módulo",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "Sistema in scripts/agents/context-watchdog.watch.ts"
  },
  {
    "id": "~5_PLAYBOOK.md::**SECCIÓN 10 – Comercialización, Pricing y Control Operativo**::Integración completa con CI/CD, con triggers por carpeta",
    "nombre": "Integración completa con CI/CD, con triggers por carpeta",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "completa in scripts/db-seed.ts"
  },
  {
    "id": "~5_PLAYBOOK.md::**SECCIÓN 10 – Comercialización, Pricing y Control Operativo**::Agentes: @refactor, @fixmasivo, @qa, @ux, @support, @data, @docs, @merge-strategist",
    "nombre": "Agentes: @refactor, @fixmasivo, @qa, @ux, @support, @data, @docs, @merge-strategist",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "data in packages/db-types/src/index.ts"
  },
  {
    "id": "~5_PLAYBOOK.md::**SECCIÓN 10 – Comercialización, Pricing y Control Operativo**::Cada agente tiene su script, memoria local, fallback y logs en audit-artifacts/",
    "nombre": "Cada agente tiene su script, memoria local, fallback y logs en audit-artifacts/",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "script in scripts/audit-module.ts"
  },
  {
    "id": "~5_PLAYBOOK.md::**SECCIÓN 10 – Comercialización, Pricing y Control Operativo**::Permite auditoría continua, generación de tests, refactor, alertas, feedback",
    "nombre": "Permite auditoría continua, generación de tests, refactor, alertas, feedback",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "continua in scripts/init-project.ts"
  },
  {
    "id": "~5_PLAYBOOK.md::**SECCIÓN 10 – Comercialización, Pricing y Control Operativo**::Carpeta prompts/ por módulo (nombrados, versionados y con fallback)",
    "nombre": "Carpeta prompts/ por módulo (nombrados, versionados y con fallback)",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "fallback in scripts/audit/verify-logic.ts"
  },
  {
    "id": "~5_PLAYBOOK.md::**SECCIÓN 10 – Comercialización, Pricing y Control Operativo**::prompts/index.json: índice maestro para trazabilidad y orquestación",
    "nombre": "prompts/index.json: índice maestro para trazabilidad y orquestación",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "para in packages/utils/src/add.ts"
  },
  {
    "id": "~5_PLAYBOOK.md::**SECCIÓN 10 – Comercialización, Pricing y Control Operativo**::Separación clara por capas:",
    "nombre": "Separación clara por capas:",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "clara in scripts/audit/audit-dependencies.ts"
  },
  {
    "id": "~5_PLAYBOOK.md::**SECCIÓN 10 – Comercialización, Pricing y Control Operativo**::check-prompts.ts: lint sintáctico y semántico de prompts",
    "nombre": "check-prompts.ts: lint sintáctico y semántico de prompts",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "lint in scripts/audit-module.ts"
  },
  {
    "id": "~5_PLAYBOOK.md::**SECCIÓN 10 – Comercialización, Pricing y Control Operativo**::validate-agents.ts: verifica que las funciones ejecutadas por los agentes coincidan con su prompt, tipo y output esperado",
    "nombre": "validate-agents.ts: verifica que las funciones ejecutadas por los agentes coincidan con su prompt, tipo y output esperado",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "output in scripts/audit-module.ts"
  },
  {
    "id": "~5_PLAYBOOK.md::**SECCIÓN 10 – Comercialización, Pricing y Control Operativo**::strato init: inicializa proyecto o módulo",
    "nombre": "strato init: inicializa proyecto o módulo",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "strato in scripts/angel-vigilante.ts"
  },
  {
    "id": "~5_PLAYBOOK.md::**SECCIÓN 10 – Comercialización, Pricing y Control Operativo**::strato audit: ejecuta auditoría modular",
    "nombre": "strato audit: ejecuta auditoría modular",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "strato in scripts/angel-vigilante.ts"
  },
  {
    "id": "~5_PLAYBOOK.md::**SECCIÓN 10 – Comercialización, Pricing y Control Operativo**::strato validate: corre validaciones por capa",
    "nombre": "strato validate: corre validaciones por capa",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "corre in packages/utils/src/add.test.ts"
  },
  {
    "id": "~5_PLAYBOOK.md::**SECCIÓN 10 – Comercialización, Pricing y Control Operativo**::strato clone: clona SaaS basado en módulos",
    "nombre": "strato clone: clona SaaS basado en módulos",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "strato in scripts/angel-vigilante.ts"
  },
  {
    "id": "~5_PLAYBOOK.md::**SECCIÓN 10 – Comercialización, Pricing y Control Operativo**::strato release: genera release firmada, deploy y changelog",
    "nombre": "strato release: genera release firmada, deploy y changelog",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "strato in scripts/angel-vigilante.ts"
  },
  {
    "id": "~5_PLAYBOOK.md::**SECCIÓN 10 – Comercialización, Pricing y Control Operativo**::Previsualización por módulo (Next.js + dev-server hot reload)",
    "nombre": "Previsualización por módulo (Next.js + dev-server hot reload)",
    "logica_verificada": false,
    "fuente_verificacion": "regex",
    "detalle": "No se encontró lógica relevante"
  },
  {
    "id": "~5_PLAYBOOK.md::**SECCIÓN 10 – Comercialización, Pricing y Control Operativo**::Sistema de fallback UI/CLI para errores de build",
    "nombre": "Sistema de fallback UI/CLI para errores de build",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "para in packages/utils/src/add.ts"
  },
  {
    "id": "~5_PLAYBOOK.md::**SECCIÓN 10 – Comercialización, Pricing y Control Operativo**::Proxy inteligente para consumir APIs locales/externas sin romper rutas ni sesión",
    "nombre": "Proxy inteligente para consumir APIs locales/externas sin romper rutas ni sesión",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "para in packages/utils/src/add.ts"
  },
  {
    "id": "~5_PLAYBOOK.md::**SECCIÓN 10 – Comercialización, Pricing y Control Operativo**::Autenticación Supabase + OTP",
    "nombre": "Autenticación Supabase + OTP",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "Supabase in scripts/db-seed.ts"
  },
  {
    "id": "~5_PLAYBOOK.md::**SECCIÓN 10 – Comercialización, Pricing y Control Operativo**::Opcional: 2FA",
    "nombre": "Opcional: 2FA",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "Opcional in scripts/db-seed.ts"
  },
  {
    "id": "~5_PLAYBOOK.md::**SECCIÓN 10 – Comercialización, Pricing y Control Operativo**::Rate limiting por IP, Zod en endpoints, validaciones estrictas por agente",
    "nombre": "Rate limiting por IP, Zod en endpoints, validaciones estrictas por agente",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "Rate in scripts/angel-vigilante.ts"
  },
  {
    "id": "~5_PLAYBOOK.md::**SECCIÓN 10 – Comercialización, Pricing y Control Operativo**::Logs firmados con hash (SHA256)",
    "nombre": "Logs firmados con hash (SHA256)",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "Logs in scripts/agents/strato.logic.ts"
  },
  {
    "id": "~5_PLAYBOOK.md::**SECCIÓN 10 – Comercialización, Pricing y Control Operativo**::Bitácoras de cambios automáticas por commit, deploy, rollback",
    "nombre": "Bitácoras de cambios automáticas por commit, deploy, rollback",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "commit in scripts/create-saas-clone.ts"
  },
  {
    "id": "~5_PLAYBOOK.md::**SECCIÓN 10 – Comercialización, Pricing y Control Operativo**::Exportación legal para auditorías o licencias",
    "nombre": "Exportación legal para auditorías o licencias",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "para in packages/utils/src/add.ts"
  },
  {
    "id": "~5_PLAYBOOK.md::**SECCIÓN 10 – Comercialización, Pricing y Control Operativo**::Términos y licencias por módulo (auto-generados desde /config/licencia)",
    "nombre": "Términos y licencias por módulo (auto-generados desde /config/licencia)",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "desde in scripts/generate-code.ts"
  },
  {
    "id": "~5_PLAYBOOK.md::**SECCIÓN 10 – Comercialización, Pricing y Control Operativo**::Sistema de licencias: Free, SaaS, API, Enterprise",
    "nombre": "Sistema de licencias: Free, SaaS, API, Enterprise",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "SaaS in scripts/create-saas-clone.ts"
  },
  {
    "id": "~5_PLAYBOOK.md::**SECCIÓN 10 – Comercialización, Pricing y Control Operativo**::Contratos digitales firmados para planes Elite",
    "nombre": "Contratos digitales firmados para planes Elite",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "para in packages/utils/src/add.ts"
  },
  {
    "id": "~5_PLAYBOOK.md::**SECCIÓN 10 – Comercialización, Pricing y Control Operativo**::Por módulo y por release (/snapshots/module-x/)",
    "nombre": "Por módulo y por release (/snapshots/module-x/)",
    "logica_verificada": false,
    "fuente_verificacion": "regex",
    "detalle": "No se encontró lógica relevante"
  },
  {
    "id": "~5_PLAYBOOK.md::**SECCIÓN 10 – Comercialización, Pricing y Control Operativo**::Versión, hash, autor, changelog",
    "nombre": "Versión, hash, autor, changelog",
    "logica_verificada": false,
    "fuente_verificacion": "regex",
    "detalle": "No se encontró lógica relevante"
  },
  {
    "id": "~5_PLAYBOOK.md::**SECCIÓN 10 – Comercialización, Pricing y Control Operativo**::Script rollback-snapshot.ts",
    "nombre": "Script rollback-snapshot.ts",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "Script in scripts/audit-module.ts"
  },
  {
    "id": "~5_PLAYBOOK.md::**SECCIÓN 10 – Comercialización, Pricing y Control Operativo**::Validación automática antes de aplicar: diffs, tests, lint",
    "nombre": "Validación automática antes de aplicar: diffs, tests, lint",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "lint in scripts/audit-module.ts"
  },
  {
    "id": "~5_PLAYBOOK.md::**SECCIÓN 10 – Comercialización, Pricing y Control Operativo**::Backup manual o automático (por cron o evento) de:",
    "nombre": "Backup manual o automático (por cron o evento) de:",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "por in packages/db-types/src/index.ts"
  },
  {
    "id": "~5_PLAYBOOK.md::**SECCIÓN 10 – Comercialización, Pricing y Control Operativo**::Backup GitHub/GitLab opcional con exportación vía CLI",
    "nombre": "Backup GitHub/GitLab opcional con exportación vía CLI",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "opcional in scripts/db-seed.ts"
  },
  {
    "id": "~5_PLAYBOOK.md::**SECCIÓN 10 – Comercialización, Pricing y Control Operativo**::deploy-strato.ts: deploy a staging, prod, test, con flags opcionales",
    "nombre": "deploy-strato.ts: deploy a staging, prod, test, con flags opcionales",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "test in packages/utils/src/add.test.ts"
  },
  {
    "id": "~5_PLAYBOOK.md::**SECCIÓN 10 – Comercialización, Pricing y Control Operativo**::Validación pre-deploy y fallback automático si falla",
    "nombre": "Validación pre-deploy y fallback automático si falla",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "fallback in scripts/audit/verify-logic.ts"
  },
  {
    "id": "~5_PLAYBOOK.md::**SECCIÓN 10 – Comercialización, Pricing y Control Operativo**::Actualiza solo lo necesario por carpeta",
    "nombre": "Actualiza solo lo necesario por carpeta",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "Actualiza in scripts/db-seed.ts"
  },
  {
    "id": "~5_PLAYBOOK.md::**SECCIÓN 10 – Comercialización, Pricing y Control Operativo**::Modo full o selectivo",
    "nombre": "Modo full o selectivo",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "full in packages/db-types/src/index.ts"
  },
  {
    "id": "~5_PLAYBOOK.md::**SECCIÓN 10 – Comercialización, Pricing y Control Operativo**::Alertas Slack o email",
    "nombre": "Alertas Slack o email",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "email in packages/db-types/src/index.ts"
  },
  {
    "id": "~5_PLAYBOOK.md::**SECCIÓN 10 – Comercialización, Pricing y Control Operativo**::Update en audit-artifacts/",
    "nombre": "Update en audit-artifacts/",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "Update in packages/db-types/src/index.ts"
  },
  {
    "id": "~5_PLAYBOOK.md::**SECCIÓN 10 – Comercialización, Pricing y Control Operativo**::Validación del sistema post-deploy (liveness check, tests, diffs)",
    "nombre": "Validación del sistema post-deploy (liveness check, tests, diffs)",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "check in scripts/angel-vigilante.ts"
  },
  {
    "id": "~5_PLAYBOOK.md::**SECCIÓN 10 – Comercialización, Pricing y Control Operativo**::Módulo SEO con:",
    "nombre": "Módulo SEO con:",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "con in packages/db-types/src/index.ts"
  },
  {
    "id": "~5_PLAYBOOK.md::**SECCIÓN 10 – Comercialización, Pricing y Control Operativo**::campaignAgent: email outbound + seguimiento",
    "nombre": "campaignAgent: email outbound + seguimiento",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "email in packages/db-types/src/index.ts"
  },
  {
    "id": "~5_PLAYBOOK.md::**SECCIÓN 10 – Comercialización, Pricing y Control Operativo**::Integración PostHog + reporting visual",
    "nombre": "Integración PostHog + reporting visual",
    "logica_verificada": false,
    "fuente_verificacion": "regex",
    "detalle": "No se encontró lógica relevante"
  },
  {
    "id": "~5_PLAYBOOK.md::**SECCIÓN 10 – Comercialización, Pricing y Control Operativo**::Aprendizaje progresivo de comportamiento de usuario",
    "nombre": "Aprendizaje progresivo de comportamiento de usuario",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "usuario in scripts/db-seed.ts"
  },
  {
    "id": "~5_PLAYBOOK.md::**SECCIÓN 10 – Comercialización, Pricing y Control Operativo**::Sistema auto-generador de assets para:",
    "nombre": "Sistema auto-generador de assets para:",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "para in packages/utils/src/add.ts"
  },
  {
    "id": "~5_PLAYBOOK.md::**SECCIÓN 10 – Comercialización, Pricing y Control Operativo**::Autogenerador de updates + newsletters",
    "nombre": "Autogenerador de updates + newsletters",
    "logica_verificada": false,
    "fuente_verificacion": "regex",
    "detalle": "No se encontró lógica relevante"
  },
  {
    "id": "~5_PLAYBOOK.md::**SECCIÓN 10 – Comercialización, Pricing y Control Operativo**::Módulo /analytics con métricas técnicas y de negocio",
    "nombre": "Módulo /analytics con métricas técnicas y de negocio",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "analytics in packages/db-types/src/index.ts"
  },
  {
    "id": "~5_PLAYBOOK.md::**SECCIÓN 10 – Comercialización, Pricing y Control Operativo**::Visualización interna + exportación a Notion, Slack, CSV",
    "nombre": "Visualización interna + exportación a Notion, Slack, CSV",
    "logica_verificada": false,
    "fuente_verificacion": "regex",
    "detalle": "No se encontró lógica relevante"
  },
  {
    "id": "~5_PLAYBOOK.md::**SECCIÓN 10 – Comercialización, Pricing y Control Operativo**::Integración con Supabase, PostHog, Segment",
    "nombre": "Integración con Supabase, PostHog, Segment",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "Supabase in scripts/db-seed.ts"
  },
  {
    "id": "~5_PLAYBOOK.md::**SECCIÓN 10 – Comercialización, Pricing y Control Operativo**::Agente @data: propone mejoras por módulo según logs y performance",
    "nombre": "Agente @data: propone mejoras por módulo según logs y performance",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "data in packages/db-types/src/index.ts"
  },
  {
    "id": "~5_PLAYBOOK.md::**SECCIÓN 10 – Comercialización, Pricing y Control Operativo**::Compara ramas, releases y sugerencias de rollback o refactor automático",
    "nombre": "Compara ramas, releases y sugerencias de rollback o refactor automático",
    "logica_verificada": false,
    "fuente_verificacion": "regex",
    "detalle": "No se encontró lógica relevante"
  },
  {
    "id": "~5_PLAYBOOK.md::**SECCIÓN 10 – Comercialización, Pricing y Control Operativo**::Entrenado con:",
    "nombre": "Entrenado con:",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "con in packages/db-types/src/index.ts"
  },
  {
    "id": "~5_PLAYBOOK.md::**SECCIÓN 10 – Comercialización, Pricing y Control Operativo**::Puede responder desde:",
    "nombre": "Puede responder desde:",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "desde in scripts/generate-code.ts"
  },
  {
    "id": "~5_PLAYBOOK.md::**SECCIÓN 10 – Comercialización, Pricing y Control Operativo**::fallback-ui.tsx y fallback-api.ts",
    "nombre": "fallback-ui.tsx y fallback-api.ts",
    "logica_verificada": false,
    "fuente_verificacion": "regex",
    "detalle": "No se encontró lógica relevante"
  },
  {
    "id": "~5_PLAYBOOK.md::**SECCIÓN 10 – Comercialización, Pricing y Control Operativo**::Alertas automáticas por error, AI fallida, render caído",
    "nombre": "Alertas automáticas por error, AI fallida, render caído",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "error in scripts/audit-module.ts"
  },
  {
    "id": "~5_PLAYBOOK.md::**SECCIÓN 10 – Comercialización, Pricing y Control Operativo**::Compatible con:",
    "nombre": "Compatible con:",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "con in packages/utils/src/add.ts"
  },
  {
    "id": "~5_PLAYBOOK.md::**SECCIÓN 10 – Comercialización, Pricing y Control Operativo**::Capa STRATO CDN opcional (para despliegue en edge global)",
    "nombre": "Capa STRATO CDN opcional (para despliegue en edge global)",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "para in packages/utils/src/add.ts"
  },
  {
    "id": "~5_PLAYBOOK.md::**SECCIÓN 10 – Comercialización, Pricing y Control Operativo**::Cada módulo puede elegirse como:",
    "nombre": "Cada módulo puede elegirse como:",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "puede in scripts/init-project.ts"
  },
  {
    "id": "~5_PLAYBOOK.md::**SECCIÓN 10 – Comercialización, Pricing y Control Operativo**::Licencia STRATO comercial y MIT selectiva",
    "nombre": "Licencia STRATO comercial y MIT selectiva",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "STRATO in scripts/angel-vigilante.ts"
  },
  {
    "id": "~5_PLAYBOOK.md::**SECCIÓN 10 – Comercialización, Pricing y Control Operativo**::Clonación por vertical SaaS",
    "nombre": "Clonación por vertical SaaS",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "SaaS in scripts/create-saas-clone.ts"
  },
  {
    "id": "~5_PLAYBOOK.md::**SECCIÓN 10 – Comercialización, Pricing y Control Operativo**::Planes de despliegue global (LATAM, US, EU, etc.)",
    "nombre": "Planes de despliegue global (LATAM, US, EU, etc.)",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "etc in scripts/agents/context-watchdog.ts"
  },
  {
    "id": "~5_PLAYBOOK.md::**SECCIÓN 10 – Comercialización, Pricing y Control Operativo**::Exportación automática a partners con branding white-label",
    "nombre": "Exportación automática a partners con branding white-label",
    "logica_verificada": false,
    "fuente_verificacion": "regex",
    "detalle": "No se encontró lógica relevante"
  },
  {
    "id": "~5_PLAYBOOK.md::**SECCIÓN 10 – Comercialización, Pricing y Control Operativo**::**Falta de Matriz de Dependencias Formal entre Módulos**",
    "nombre": "**Falta de Matriz de Dependencias Formal entre Módulos**",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "Falta in scripts/db-seed.ts"
  },
  {
    "id": "~5_PLAYBOOK.md::**SECCIÓN 10 – Comercialización, Pricing y Control Operativo**::**Pricing aún no Validado ni Simulado con Datos Dummy**",
    "nombre": "**Pricing aún no Validado ni Simulado con Datos Dummy**",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "Datos in scripts/db-seed.ts"
  },
  {
    "id": "~5_PLAYBOOK.md::**SECCIÓN 10 – Comercialización, Pricing y Control Operativo**::**Falta un Visualizador Maestro de Módulos y Estado Técnico Global**",
    "nombre": "**Falta un Visualizador Maestro de Módulos y Estado Técnico Global**",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "Falta in scripts/db-seed.ts"
  },
  {
    "id": "~5_PLAYBOOK.md::**SECCIÓN 10 – Comercialización, Pricing y Control Operativo**::**Validaciones de Flujo AI aún no Completas**",
    "nombre": "**Validaciones de Flujo AI aún no Completas**",
    "logica_verificada": false,
    "fuente_verificacion": "regex",
    "detalle": "No se encontró lógica relevante"
  },
  {
    "id": "~5_PLAYBOOK.md::**SECCIÓN 10 – Comercialización, Pricing y Control Operativo**::Prompts rotos o desalineados",
    "nombre": "Prompts rotos o desalineados",
    "logica_verificada": false,
    "fuente_verificacion": "regex",
    "detalle": "No se encontró lógica relevante"
  },
  {
    "id": "~5_PLAYBOOK.md::**SECCIÓN 10 – Comercialización, Pricing y Control Operativo**::Errores comunes de output",
    "nombre": "Errores comunes de output",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "output in scripts/audit-module.ts"
  },
  {
    "id": "~5_PLAYBOOK.md::**SECCIÓN 10 – Comercialización, Pricing y Control Operativo**::Conflictos entre frontend, backend y lógica AI",
    "nombre": "Conflictos entre frontend, backend y lógica AI",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "frontend in scripts/angel-vigilante.ts"
  },
  {
    "id": "~5_PLAYBOOK.md::**SECCIÓN 10 – Comercialización, Pricing y Control Operativo**::**Reforzar Defensa Legal Modular**",
    "nombre": "**Reforzar Defensa Legal Modular**",
    "logica_verificada": false,
    "fuente_verificacion": "regex",
    "detalle": "No se encontró lógica relevante"
  },
  {
    "id": "~6_README.cursor.md::Cómo Funcionan los Guardianes::.  **Guardián de Commits (Pre-commit Hook)**:",
    "nombre": ".  **Guardián de Commits (Pre-commit Hook)**:",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "Hook in scripts/check-blindaje-real.ts"
  },
  {
    "id": "~6_README.cursor.md::Cómo Funcionan los Guardianes::.  **Guardián de CI/CD (GitHub Actions)**:",
    "nombre": ".  **Guardián de CI/CD (GitHub Actions)**:",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "GitHub in scripts/report-strato-defense.ts"
  },
  {
    "id": "~6_README.cursor.md::Cómo Funcionan los Guardianes::.  **Guardián de Vigilancia (Real-time Watcher)**:",
    "nombre": ".  **Guardián de Vigilancia (Real-time Watcher)**:",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "Watcher in scripts/night-watchman.ts"
  },
  {
    "id": "~6_README.cursor.md::Qué Hacer si una Validación Falla::.  **Lee el error**: El mensaje te dirá qué archivo falló y por qué.",
    "nombre": ".  **Lee el error**: El mensaje te dirá qué archivo falló y por qué.",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "qu in packages/db-types/src/index.ts"
  },
  {
    "id": "~6_README.cursor.md::Qué Hacer si una Validación Falla::.  **Consulta el manifiesto**: Abre `.strato-manifest.json` para ver las `validPaths` y `forbiddenPaths` permitidas.",
    "nombre": ".  **Consulta el manifiesto**: Abre `.strato-manifest.json` para ver las `validPaths` y `forbiddenPaths` permitidas.",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "para in packages/utils/src/add.ts"
  },
  {
    "id": "~6_README.cursor.md::Qué Hacer si una Validación Falla::.  **Mueve el archivo**: Ubica tu archivo en una ruta válida.",
    "nombre": ".  **Mueve el archivo**: Ubica tu archivo en una ruta válida.",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "archivo in scripts/generate-code.ts"
  },
  {
    "id": "~6_README.cursor.md::Qué Hacer si una Validación Falla::.  **Intenta de nuevo**: Haz el commit o push otra vez.",
    "nombre": ".  **Intenta de nuevo**: Haz el commit o push otra vez.",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "commit in scripts/create-saas-clone.ts"
  },
  {
    "id": "~6_README.cursor.md::Ejemplo de Manifiesto (`.strato-manifest.json`)::**`validPaths`**: Lista de patrones glob donde los archivos *pueden* existir.",
    "nombre": "**`validPaths`**: Lista de patrones glob donde los archivos *pueden* existir.",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "glob in scripts/audit-module.ts"
  },
  {
    "id": "~6_README.cursor.md::Ejemplo de Manifiesto (`.strato-manifest.json`)::**`forbiddenPaths`**: Lista de patrones glob donde los archivos *nunca* deben existir. Tiene prioridad sobre `validPaths`.",
    "nombre": "**`forbiddenPaths`**: Lista de patrones glob donde los archivos *nunca* deben existir. Tiene prioridad sobre `validPaths`.",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "glob in scripts/audit-module.ts"
  },
  {
    "id": "~6_README.cursor.md::Ejemplo de Manifiesto (`.strato-manifest.json`)::**`namingConventions`**: Reglas de nombrado para tipos específicos de archivos (actualmente informativo).",
    "nombre": "**`namingConventions`**: Reglas de nombrado para tipos específicos de archivos (actualmente informativo).",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "para in packages/utils/src/add.ts"
  },
  {
    "id": "~6_README.cursor.md::Ejemplo de Manifiesto (`.strato-manifest.json`)::**`preferredEntryDir`**: Directorio preferido para nuevos componentes de frontend (informativo).",
    "nombre": "**`preferredEntryDir`**: Directorio preferido para nuevos componentes de frontend (informativo).",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "para in packages/utils/src/add.ts"
  },
  {
    "id": "~7_SAAS_MATRIX_ROADMAP.md::1. Módulo de Autenticación y Autorización (AuthN/AuthZ)::**Descripción:** Lógica completa de registro, inicio de sesión, cierre de sesión, y recuperación de contraseña. Incluirá la gestión de roles y permisos (ej: `admin`, `miembro`, `invitado`).",
    "nombre": "**Descripción:** Lógica completa de registro, inicio de sesión, cierre de sesión, y recuperación de contraseña. Incluirá la gestión de roles y permisos (ej: `admin`, `miembro`, `invitado`).",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "ej in scripts/audit-module.ts"
  },
  {
    "id": "~7_SAAS_MATRIX_ROADMAP.md::1. Módulo de Autenticación y Autorización (AuthN/AuthZ)::**Estado:** 🚧 **Pendiente**",
    "nombre": "**Estado:** 🚧 **Pendiente**",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "Pendiente in scripts/audit/checklist-audit.ts"
  },
  {
    "id": "~7_SAAS_MATRIX_ROADMAP.md::1. Módulo de Autenticación y Autorización (AuthN/AuthZ)::**Prioridad:** **Crítica**",
    "nombre": "**Prioridad:** **Crítica**",
    "logica_verificada": false,
    "fuente_verificacion": "regex",
    "detalle": "No se encontró lógica relevante"
  },
  {
    "id": "~7_SAAS_MATRIX_ROADMAP.md::2. Módulo de Multi-Tenancy (Aislamiento de Clientes)::**Descripción:** Implementar el mecanismo que asegura que los datos de un cliente (tenant) sean completamente inaccesibles para otros. Con Supabase, esto se logrará mediante **Row-Level Security (RLS)**.",
    "nombre": "**Descripción:** Implementar el mecanismo que asegura que los datos de un cliente (tenant) sean completamente inaccesibles para otros. Con Supabase, esto se logrará mediante **Row-Level Security (RLS)**.",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "para in packages/utils/src/add.ts"
  },
  {
    "id": "~7_SAAS_MATRIX_ROADMAP.md::2. Módulo de Multi-Tenancy (Aislamiento de Clientes)::**Estado:** 🚧 **Pendiente**",
    "nombre": "**Estado:** 🚧 **Pendiente**",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "Pendiente in scripts/audit/checklist-audit.ts"
  },
  {
    "id": "~7_SAAS_MATRIX_ROADMAP.md::2. Módulo de Multi-Tenancy (Aislamiento de Clientes)::**Prioridad:** **Crítica**",
    "nombre": "**Prioridad:** **Crítica**",
    "logica_verificada": false,
    "fuente_verificacion": "regex",
    "detalle": "No se encontró lógica relevante"
  },
  {
    "id": "~7_SAAS_MATRIX_ROADMAP.md::3. Módulo de Facturación (Billing)::**Descripción:** Integración con un proveedor de pagos como **Stripe**. Incluirá la creación de planes de suscripción, gestión de pagos, y manejo de webhooks para eventos clave (pago exitoso/fallido, cancelación).",
    "nombre": "**Descripción:** Integración con un proveedor de pagos como **Stripe**. Incluirá la creación de planes de suscripción, gestión de pagos, y manejo de webhooks para eventos clave (pago exitoso/fallido, cancelación).",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "para in packages/utils/src/add.ts"
  },
  {
    "id": "~7_SAAS_MATRIX_ROADMAP.md::3. Módulo de Facturación (Billing)::**Estado:** 🚧 **Pendiente**",
    "nombre": "**Estado:** 🚧 **Pendiente**",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "Pendiente in scripts/audit/checklist-audit.ts"
  },
  {
    "id": "~7_SAAS_MATRIX_ROADMAP.md::3. Módulo de Facturación (Billing)::**Prioridad:** **Alta**",
    "nombre": "**Prioridad:** **Alta**",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "Alta in scripts/db-seed.ts"
  },
  {
    "id": "~7_SAAS_MATRIX_ROADMAP.md::4. Módulo de UI Compartida y Theming::**Descripción:** Un paquete (`packages/ui`) que contenga todos los componentes de React (Botones, Inputs, Cards, etc.). Debe incluir un sistema de \"theming\" para personalizar la apariencia (logo, colores) de cada SaaS clonado editando un único archivo de configuración.",
    "nombre": "**Descripción:** Un paquete (`packages/ui`) que contenga todos los componentes de React (Botones, Inputs, Cards, etc.). Debe incluir un sistema de \"theming\" para personalizar la apariencia (logo, colores) de cada SaaS clonado editando un único archivo de configuración.",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "todos in packages/db-types/src/index.ts"
  },
  {
    "id": "~7_SAAS_MATRIX_ROADMAP.md::4. Módulo de UI Compartida y Theming::**Estado:** 🚧 **Pendiente**",
    "nombre": "**Estado:** 🚧 **Pendiente**",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "Pendiente in scripts/audit/checklist-audit.ts"
  },
  {
    "id": "~7_SAAS_MATRIX_ROADMAP.md::4. Módulo de UI Compartida y Theming::**Prioridad:** **Media**",
    "nombre": "**Prioridad:** **Media**",
    "logica_verificada": false,
    "fuente_verificacion": "regex",
    "detalle": "No se encontró lógica relevante"
  },
  {
    "id": "~7_SAAS_MATRIX_ROADMAP.md::5. Módulo de Administración (Admin Dashboard)::**Descripción:** Un panel de control interno para los operadores de la matriz. Permitirá ver estadísticas de uso, gestionar usuarios de todos los tenants, y configurar aspectos globales de las aplicaciones.",
    "nombre": "**Descripción:** Un panel de control interno para los operadores de la matriz. Permitirá ver estadísticas de uso, gestionar usuarios de todos los tenants, y configurar aspectos globales de las aplicaciones.",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "todos in packages/db-types/src/index.ts"
  },
  {
    "id": "~7_SAAS_MATRIX_ROADMAP.md::5. Módulo de Administración (Admin Dashboard)::**Estado:** 🚧 **Pendiente**",
    "nombre": "**Estado:** 🚧 **Pendiente**",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "Pendiente in scripts/audit/checklist-audit.ts"
  },
  {
    "id": "~7_SAAS_MATRIX_ROADMAP.md::5. Módulo de Administración (Admin Dashboard)::**Prioridad:** **Media**",
    "nombre": "**Prioridad:** **Media**",
    "logica_verificada": false,
    "fuente_verificacion": "regex",
    "detalle": "No se encontró lógica relevante"
  },
  {
    "id": "~7_SAAS_MATRIX_ROADMAP.md::Proceso de Lanzamiento de un Nuevo SaaS::.  Clonar el repositorio de la matriz.",
    "nombre": ".  Clonar el repositorio de la matriz.",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "matriz in scripts/validate-module.ts"
  },
  {
    "id": "~7_SAAS_MATRIX_ROADMAP.md::Proceso de Lanzamiento de un Nuevo SaaS::.  Configurar el \"tema\" (colores, fuentes, logo).",
    "nombre": ".  Configurar el \"tema\" (colores, fuentes, logo).",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "tema in scripts/agents/context-watchdog.watch.ts"
  },
  {
    "id": "~7_SAAS_MATRIX_ROADMAP.md::Proceso de Lanzamiento de un Nuevo SaaS::.  Definir los planes de suscripción en Stripe y en la configuración.",
    "nombre": ".  Definir los planes de suscripción en Stripe y en la configuración.",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "Stripe in scripts/audit/checklist-audit.ts"
  },
  {
    "id": "~7_SAAS_MATRIX_ROADMAP.md::Proceso de Lanzamiento de un Nuevo SaaS::.  Desplegar en la infraestructura de producción.",
    "nombre": ".  Desplegar en la infraestructura de producción.",
    "logica_verificada": false,
    "fuente_verificacion": "regex",
    "detalle": "No se encontró lógica relevante"
  },
  {
    "id": "~7_SAAS_MATRIX_ROADMAP.md::Proceso de Lanzamiento de un Nuevo SaaS::.  ¡Lanzar!",
    "nombre": ".  ¡Lanzar!",
    "logica_verificada": false,
    "fuente_verificacion": "regex",
    "detalle": "No se encontró lógica relevante"
  },
  {
    "id": "~8_SCORECARD.md::Diagnóstico General::**Fortalezas:** Nuestra **base arquitectónica (100/100)** y nuestra **disciplina de calidad de código (95/100)** son de clase mundial. Esto es lo más difícil de corregir a posteriori, y nosotros lo tenemos bien desde el principio.",
    "nombre": "**Fortalezas:** Nuestra **base arquitectónica (100/100)** y nuestra **disciplina de calidad de código (95/100)** son de clase mundial. Esto es lo más difícil de corregir a posteriori, y nosotros lo tenemos bien desde el principio.",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "base in packages/db-types/src/index.ts"
  },
  {
    "id": "~8_SCORECARD.md::Diagnóstico General::**Debilidades Críticas:** La **falta casi total de tests (15/100)** es la que hunde nuestra puntuación media. Es el talón de Aquiles de la plataforma en este momento.",
    "nombre": "**Debilidades Críticas:** La **falta casi total de tests (15/100)** es la que hunde nuestra puntuación media. Es el talón de Aquiles de la plataforma en este momento.",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "falta in scripts/db-seed.ts"
  },
  {
    "id": "~9_STRATO_FULL_CLEAN_COVERAGE.md::Sección 1: Auditoría Técnica Completa::Ejecutar `tsc --noEmit` en todo el monorepo y corregir errores de tipo.",
    "nombre": "Ejecutar `tsc --noEmit` en todo el monorepo y corregir errores de tipo.",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "tsc in packages/db-types/src/index.ts"
  },
  {
    "id": "~9_STRATO_FULL_CLEAN_COVERAGE.md::Sección 1: Auditoría Técnica Completa::Ejecutar `eslint . --ext .ts,.tsx` y dejar output en `audit-artifacts/eslint-report.json`.",
    "nombre": "Ejecutar `eslint . --ext .ts,.tsx` y dejar output en `audit-artifacts/eslint-report.json`.",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "ext in packages/db-types/src/index.ts"
  },
  {
    "id": "~9_STRATO_FULL_CLEAN_COVERAGE.md::Sección 1: Auditoría Técnica Completa::Validar que `context-watchdog.ts` esté corriendo en cada pre-commit.",
    "nombre": "Validar que `context-watchdog.ts` esté corriendo en cada pre-commit.",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "est in packages/utils/src/add.test.ts"
  },
  {
    "id": "~9_STRATO_FULL_CLEAN_COVERAGE.md::Sección 1: Auditoría Técnica Completa::Auditar `console.log`, `any`, imports relativos, rutas rotas o duplicadas.",
    "nombre": "Auditar `console.log`, `any`, imports relativos, rutas rotas o duplicadas.",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "imports in scripts/angel-vigilante.ts"
  },
  {
    "id": "~9_STRATO_FULL_CLEAN_COVERAGE.md::Sección 1: Auditoría Técnica Completa::Revisar `.env.example` y variables en `.env.local`, `.env.production`.",
    "nombre": "Revisar `.env.example` y variables en `.env.local`, `.env.production`.",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "variables in packages/db-types/src/index.ts"
  },
  {
    "id": "~9_STRATO_FULL_CLEAN_COVERAGE.md::Sección 2: FIX COVERAGE – Backend & Logic::Generar tests unitarios y de integración para todos los servicios con cobertura < 70%.",
    "nombre": "Generar tests unitarios y de integración para todos los servicios con cobertura < 70%.",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "para in packages/utils/src/add.ts"
  },
  {
    "id": "~9_STRATO_FULL_CLEAN_COVERAGE.md::Sección 2: FIX COVERAGE – Backend & Logic::Usar @qa agent para autogenerar tests en:",
    "nombre": "Usar @qa agent para autogenerar tests en:",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "para in packages/utils/src/add.ts"
  },
  {
    "id": "~9_STRATO_FULL_CLEAN_COVERAGE.md::Sección 2: FIX COVERAGE – Backend & Logic::Validar coverage con `vitest run --coverage` y dejar reportes en `audit-artifacts/coverage-final.json`.",
    "nombre": "Validar coverage con `vitest run --coverage` y dejar reportes en `audit-artifacts/coverage-final.json`.",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "vitest in packages/utils/src/add.test.ts"
  },
  {
    "id": "~9_STRATO_FULL_CLEAN_COVERAGE.md::Sección 3: FIX COVERAGE – Frontend & UI::Validar que todos los componentes visuales tengan `__tests__/componente.test.tsx`.",
    "nombre": "Validar que todos los componentes visuales tengan `__tests__/componente.test.tsx`.",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "todos in packages/db-types/src/index.ts"
  },
  {
    "id": "~9_STRATO_FULL_CLEAN_COVERAGE.md::Sección 3: FIX COVERAGE – Frontend & UI::Revisar con @ux agent accesibilidad (a11y), estados aria-*, dark mode, navegación.",
    "nombre": "Revisar con @ux agent accesibilidad (a11y), estados aria-*, dark mode, navegación.",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "aria in packages/db-types/src/index.ts"
  },
  {
    "id": "~9_STRATO_FULL_CLEAN_COVERAGE.md::Sección 3: FIX COVERAGE – Frontend & UI::Usar playwright o @testing-library/react para testear rutas y flujos críticos.",
    "nombre": "Usar playwright o @testing-library/react para testear rutas y flujos críticos.",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "para in packages/utils/src/add.ts"
  },
  {
    "id": "~9_STRATO_FULL_CLEAN_COVERAGE.md::Sección 4: CLEAN PATHS, FILES & DEPENDENCIES::Usar depcheck para detectar:",
    "nombre": "Usar depcheck para detectar:",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "para in packages/utils/src/add.ts"
  },
  {
    "id": "~9_STRATO_FULL_CLEAN_COVERAGE.md::Sección 4: CLEAN PATHS, FILES & DEPENDENCIES::Eliminar:",
    "nombre": "Eliminar:",
    "logica_verificada": false,
    "fuente_verificacion": "regex",
    "detalle": "No se encontró lógica relevante"
  },
  {
    "id": "~9_STRATO_FULL_CLEAN_COVERAGE.md::Sección 4: CLEAN PATHS, FILES & DEPENDENCIES::Validar package.json limpio, sin duplicados de versión, con scripts reales en uso",
    "nombre": "Validar package.json limpio, sin duplicados de versión, con scripts reales en uso",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "packagejson in scripts/audit-module.ts"
  },
  {
    "id": "~9_STRATO_FULL_CLEAN_COVERAGE.md::Sección 5: BLINDAJE TÉCNICO AVANZADO::Verificar `.strato-manifest.json` tenga TODAS las rutas actuales y sus convenciones",
    "nombre": "Verificar `.strato-manifest.json` tenga TODAS las rutas actuales y sus convenciones",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "rutas in scripts/agents/context-watchdog.ts"
  },
  {
    "id": "~9_STRATO_FULL_CLEAN_COVERAGE.md::Sección 5: BLINDAJE TÉCNICO AVANZADO::Validar husky, lint-staged, runtime-defense.ts, validate-test-templates.ts",
    "nombre": "Validar husky, lint-staged, runtime-defense.ts, validate-test-templates.ts",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "husky in scripts/check-blindaje-real.ts"
  },
  {
    "id": "~9_STRATO_FULL_CLEAN_COVERAGE.md::Sección 5: BLINDAJE TÉCNICO AVANZADO::Agregar prepush con:",
    "nombre": "Agregar prepush con:",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "con in packages/db-types/src/index.ts"
  },
  {
    "id": "~9_STRATO_FULL_CLEAN_COVERAGE.md::Sección 5: BLINDAJE TÉCNICO AVANZADO::Agregar `scripts/validate-clean-system.ts` para correr CI local completo",
    "nombre": "Agregar `scripts/validate-clean-system.ts` para correr CI local completo",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "para in packages/utils/src/add.ts"
  },
  {
    "id": "~9_STRATO_FULL_CLEAN_COVERAGE.md::Sección 6: VALIDACIÓN FINAL::Ejecutar todos los tests (`vitest run`, `playwright`, etc.)",
    "nombre": "Ejecutar todos los tests (`vitest run`, `playwright`, etc.)",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "todos in packages/db-types/src/index.ts"
  },
  {
    "id": "~9_STRATO_FULL_CLEAN_COVERAGE.md::Sección 6: VALIDACIÓN FINAL::Validar que coverage global sea >= 90% líneas / 80% funciones",
    "nombre": "Validar que coverage global sea >= 90% líneas / 80% funciones",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "coverage in scripts/audit-module.ts"
  },
  {
    "id": "~9_STRATO_FULL_CLEAN_COVERAGE.md::Sección 6: VALIDACIÓN FINAL::Generar reporte final con status + semáforo por módulo",
    "nombre": "Generar reporte final con status + semáforo por módulo",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "status in scripts/audit-module.ts"
  },
  {
    "id": "~9_STRATO_FULL_CLEAN_COVERAGE.md::Sección 6: VALIDACIÓN FINAL::Commit final:",
    "nombre": "Commit final:",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "Commit in scripts/create-saas-clone.ts"
  },
  {
    "id": "~11_LOCAL_WORKAROUNDS.md::1. Workaround temporal en middleware de autenticación::Si el JWT recibido no contiene el claim `tenant_id` y el entorno es `test`, se inyecta un `tenant_id` dummy (`00000000-0000-0000-0000-000000000001`) para que los tests pasen en local.",
    "nombre": "Si el JWT recibido no contiene el claim `tenant_id` y el entorno es `test`, se inyecta un `tenant_id` dummy (`00000000-0000-0000-0000-000000000001`) para que los tests pasen en local.",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "test in packages/utils/src/add.test.ts"
  },
  {
    "id": "~11_LOCAL_WORKAROUNDS.md::1. Workaround temporal en middleware de autenticación::**Este workaround debe eliminarse cuando Supabase esté configurado para incluir `tenant_id` en el JWT mediante custom claims.**",
    "nombre": "**Este workaround debe eliminarse cuando Supabase esté configurado para incluir `tenant_id` en el JWT mediante custom claims.**",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "est in packages/utils/src/add.test.ts"
  },
  {
    "id": "~11_LOCAL_WORKAROUNDS.md::2. Configuración pendiente de custom claims en Supabase::Falta configurar la función `jwt_custom_claims` en Supabase para que el claim `tenant_id` se incluya automáticamente en el JWT de los usuarios.",
    "nombre": "Falta configurar la función `jwt_custom_claims` en Supabase para que el claim `tenant_id` se incluya automáticamente en el JWT de los usuarios.",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "para in packages/utils/src/add.ts"
  },
  {
    "id": "~11_LOCAL_WORKAROUNDS.md::2. Configuración pendiente de custom claims en Supabase::Cuando se tenga acceso a la consola de Supabase, ejecutar:",
    "nombre": "Cuando se tenga acceso a la consola de Supabase, ejecutar:",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "Supabase in scripts/db-seed.ts"
  },
  {
    "id": "~11_LOCAL_WORKAROUNDS.md::2. Configuración pendiente de custom claims en Supabase::Luego, configurar en la consola de Supabase Auth que use esta función para los custom claims.",
    "nombre": "Luego, configurar en la consola de Supabase Auth que use esta función para los custom claims.",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "para in packages/utils/src/add.ts"
  },
  {
    "id": "~11_LOCAL_WORKAROUNDS.md::3. Revisión obligatoria antes de producción::Eliminar todos los workarounds temporales documentados aquí.",
    "nombre": "Eliminar todos los workarounds temporales documentados aquí.",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "todos in packages/db-types/src/index.ts"
  },
  {
    "id": "~11_LOCAL_WORKAROUNDS.md::3. Revisión obligatoria antes de producción::Confirmar que los JWT generados por Supabase incluyen `tenant_id` y que el backend ya no depende de hacks para los tests.",
    "nombre": "Confirmar que los JWT generados por Supabase incluyen `tenant_id` y que el backend ya no depende de hacks para los tests.",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "para in packages/utils/src/add.ts"
  },
  {
    "id": "~11_LOCAL_WORKAROUNDS.md::3. Revisión obligatoria antes de producción::Validar que los tests siguen pasando tras la migración.",
    "nombre": "Validar que los tests siguen pasando tras la migración.",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "tests in scripts/report-status.ts"
  },
  {
    "id": "~11_LOCAL_WORKAROUNDS.md::[PENDIENTE] Migración para todos multiusuario::**Descripción:** La migración para agregar las columnas `user_id` y `tenant_id` a la tabla `todos` no se ha aplicado aún en el entorno local/test.",
    "nombre": "**Descripción:** La migración para agregar las columnas `user_id` y `tenant_id` a la tabla `todos` no se ha aplicado aún en el entorno local/test.",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "user_id in packages/db-types/src/index.ts"
  },
  {
    "id": "~11_LOCAL_WORKAROUNDS.md::[PENDIENTE] Migración para todos multiusuario::**Impacto:** Los tests de `/todos` multiusuario fallarán con error `column todos.user_id does not exist` hasta aplicar la migración y regenerar los tipos de Supabase.",
    "nombre": "**Impacto:** Los tests de `/todos` multiusuario fallarán con error `column todos.user_id does not exist` hasta aplicar la migración y regenerar los tipos de Supabase.",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "todos in packages/db-types/src/index.ts"
  },
  {
    "id": "~11_LOCAL_WORKAROUNDS.md::[PENDIENTE] Migración para todos multiusuario::**Acción requerida:**",
    "nombre": "**Acción requerida:**",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "requerida in scripts/audit/audit-dependencies.ts"
  },
  {
    "id": "~11_LOCAL_WORKAROUNDS.md::Tests afectados por la migración pendiente de todos multiusuario::**Archivo:** `apps/backend/src/tests/backend.coverage.extended.test.ts`",
    "nombre": "**Archivo:** `apps/backend/src/tests/backend.coverage.extended.test.ts`",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "Archivo in scripts/generate-code.ts"
  },
  {
    "id": "~11_LOCAL_WORKAROUNDS.md::Tests afectados por la migración pendiente de todos multiusuario::**Tests afectados:**",
    "nombre": "**Tests afectados:**",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "Tests in scripts/report-status.ts"
  },
  {
    "id": "~11_LOCAL_WORKAROUNDS.md::Workaround temporal para que los tests pasen::**Acción:** Marcar los tests afectados con `.skip` o `.todo` en Vitest/Jest mientras la migración no esté aplicada.",
    "nombre": "**Acción:** Marcar los tests afectados con `.skip` o `.todo` en Vitest/Jest mientras la migración no esté aplicada.",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "todo in packages/db-types/src/index.ts"
  },
  {
    "id": "~11_LOCAL_WORKAROUNDS.md::Workaround temporal para que los tests pasen::**Ejemplo:**",
    "nombre": "**Ejemplo:**",
    "logica_verificada": false,
    "fuente_verificacion": "regex",
    "detalle": "No se encontró lógica relevante"
  },
  {
    "id": "~11_LOCAL_WORKAROUNDS.md::Workaround temporal para que los tests pasen::**Nota:** El test debe ser reactivado (`it` en vez de `it.skip`) en cuanto la migración y los tipos estén sincronizados.",
    "nombre": "**Nota:** El test debe ser reactivado (`it` en vez de `it.skip`) en cuanto la migración y los tipos estén sincronizados.",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "it in packages/db-types/src/index.ts"
  },
  {
    "id": "~11_LOCAL_WORKAROUNDS.md::[PENDIENTE] Tests fallan por ausencia de columna `email` en `profiles`::**Descripción:** Los tests de backend que dependen de la columna `email` en la tabla `profiles` fallan porque dicha columna no existe en el esquema actual de la base de datos.",
    "nombre": "**Descripción:** Los tests de backend que dependen de la columna `email` en la tabla `profiles` fallan porque dicha columna no existe en el esquema actual de la base de datos.",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "email in packages/db-types/src/index.ts"
  },
  {
    "id": "~11_LOCAL_WORKAROUNDS.md::[PENDIENTE] Tests fallan por ausencia de columna `email` en `profiles`::**Impacto:** Los tests de `profiles.controller.test.ts`, `auth.test.ts` y posiblemente otros que esperan `email` en el perfil fallan con error de esquema.",
    "nombre": "**Impacto:** Los tests de `profiles.controller.test.ts`, `auth.test.ts` y posiblemente otros que esperan `email` en el perfil fallan con error de esquema.",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "email in packages/db-types/src/index.ts"
  },
  {
    "id": "~11_LOCAL_WORKAROUNDS.md::[PENDIENTE] Tests fallan por ausencia de columna `email` en `profiles`::**Acción requerida:**",
    "nombre": "**Acción requerida:**",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "requerida in scripts/audit/audit-dependencies.ts"
  },
  {
    "id": "~11_LOCAL_WORKAROUNDS.md::[PENDIENTE] Tests fallan por ausencia de columna `email` en `profiles`::**Workaround temporal:** Marcar los tests afectados con `.skip` o `.todo` hasta que se resuelva el esquema.",
    "nombre": "**Workaround temporal:** Marcar los tests afectados con `.skip` o `.todo` hasta que se resuelva el esquema.",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "todo in packages/db-types/src/index.ts"
  },
  {
    "id": "~11_LOCAL_WORKAROUNDS.md::[PENDIENTE] Tests fallan por ausencia de columna `email` en `profiles`::**Tests afectados:**",
    "nombre": "**Tests afectados:**",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "Tests in scripts/report-status.ts"
  },
  {
    "id": "~13_PIPE_AUDITORIA_STRATO.md::Alcance::Aplica a todo el monorepo STRATO (backend, frontend, scripts, infra, etc.).",
    "nombre": "Aplica a todo el monorepo STRATO (backend, frontend, scripts, infra, etc.).",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "todo in packages/db-types/src/index.ts"
  },
  {
    "id": "~13_PIPE_AUDITORIA_STRATO.md::Alcance::Permite auditar features, tests, cobertura, lógica y existencia real de cada requisito.",
    "nombre": "Permite auditar features, tests, cobertura, lógica y existencia real de cada requisito.",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "real in scripts/check-blindaje-real.ts"
  },
  {
    "id": "~13_PIPE_AUDITORIA_STRATO.md::Alcance::Genera reportes JSON estructurados, listos para visualización, CI/CD, dashboards o auditoría externa.",
    "nombre": "Genera reportes JSON estructurados, listos para visualización, CI/CD, dashboards o auditoría externa.",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "JSON in packages/db-types/src/index.ts"
  },
  {
    "id": "~13_PIPE_AUDITORIA_STRATO.md::Funcionamiento: Pasos del PIPE::. **Extracción de Expectativas**",
    "nombre": ". **Extracción de Expectativas**",
    "logica_verificada": false,
    "fuente_verificacion": "regex",
    "detalle": "No se encontró lógica relevante"
  },
  {
    "id": "~13_PIPE_AUDITORIA_STRATO.md::Funcionamiento: Pasos del PIPE::. **Verificación de Existencia**",
    "nombre": ". **Verificación de Existencia**",
    "logica_verificada": false,
    "fuente_verificacion": "regex",
    "detalle": "No se encontró lógica relevante"
  },
  {
    "id": "~13_PIPE_AUDITORIA_STRATO.md::Funcionamiento: Pasos del PIPE::. **Verificación de Test y Cobertura**",
    "nombre": ". **Verificación de Test y Cobertura**",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "Test in packages/utils/src/add.test.ts"
  },
  {
    "id": "~13_PIPE_AUDITORIA_STRATO.md::Funcionamiento: Pasos del PIPE::. **Verificación de Lógica**",
    "nombre": ". **Verificación de Lógica**",
    "logica_verificada": false,
    "fuente_verificacion": "regex",
    "detalle": "No se encontró lógica relevante"
  },
  {
    "id": "~13_PIPE_AUDITORIA_STRATO.md::Funcionamiento: Pasos del PIPE::. **Fusión y Scoring**",
    "nombre": ". **Fusión y Scoring**",
    "logica_verificada": false,
    "fuente_verificacion": "regex",
    "detalle": "No se encontró lógica relevante"
  },
  {
    "id": "~13_PIPE_AUDITORIA_STRATO.md::Archivos Generados::`matrix.audit.json` — Expectativas extraídas de los checklists.",
    "nombre": "`matrix.audit.json` — Expectativas extraídas de los checklists.",
    "logica_verificada": false,
    "fuente_verificacion": "regex",
    "detalle": "No se encontró lógica relevante"
  },
  {
    "id": "~13_PIPE_AUDITORIA_STRATO.md::Archivos Generados::`matrix.verified.json` — Verificación de existencia real en el código.",
    "nombre": "`matrix.verified.json` — Verificación de existencia real en el código.",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "real in scripts/check-blindaje-real.ts"
  },
  {
    "id": "~13_PIPE_AUDITORIA_STRATO.md::Archivos Generados::`matrix.coverage.json` — Estado de tests y cobertura por feature.",
    "nombre": "`matrix.coverage.json` — Estado de tests y cobertura por feature.",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "tests in scripts/report-status.ts"
  },
  {
    "id": "~13_PIPE_AUDITORIA_STRATO.md::Archivos Generados::`matrix.logic.json` — Verificación heurística de lógica implementada.",
    "nombre": "`matrix.logic.json` — Verificación heurística de lógica implementada.",
    "logica_verificada": false,
    "fuente_verificacion": "regex",
    "detalle": "No se encontró lógica relevante"
  },
  {
    "id": "~13_PIPE_AUDITORIA_STRATO.md::Archivos Generados::`matrix.report.json` — Fusión y scoring final por feature.",
    "nombre": "`matrix.report.json` — Fusión y scoring final por feature.",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "final in scripts/init-project.ts"
  },
  {
    "id": "~13_PIPE_AUDITORIA_STRATO.md::Ejecución del PIPE::**Manual:**",
    "nombre": "**Manual:**",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "Manual in scripts/audit/verify-logic.ts"
  },
  {
    "id": "~13_PIPE_AUDITORIA_STRATO.md::Ejecución del PIPE::**Automatizado:**",
    "nombre": "**Automatizado:**",
    "logica_verificada": false,
    "fuente_verificacion": "regex",
    "detalle": "No se encontró lógica relevante"
  },
  {
    "id": "~13_PIPE_AUDITORIA_STRATO.md::¿Para qué sirve?::Permite saber, de forma objetiva y automatizada, **qué tan alineado está el código con los requisitos y mejores prácticas**.",
    "nombre": "Permite saber, de forma objetiva y automatizada, **qué tan alineado está el código con los requisitos y mejores prácticas**.",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "est in packages/utils/src/add.test.ts"
  },
  {
    "id": "~13_PIPE_AUDITORIA_STRATO.md::¿Para qué sirve?::Facilita la detección de deuda técnica, gaps de test, cobertura y lógica.",
    "nombre": "Facilita la detección de deuda técnica, gaps de test, cobertura y lógica.",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "test in packages/utils/src/add.test.ts"
  },
  {
    "id": "~13_PIPE_AUDITORIA_STRATO.md::¿Para qué sirve?::Es base para reporting, dashboards, y mejora continua.",
    "nombre": "Es base para reporting, dashboards, y mejora continua.",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "base in packages/db-types/src/index.ts"
  },
  {
    "id": "~13_PIPE_AUDITORIA_STRATO.md::¿Para qué sirve?::Permite auditoría externa y validación de cumplimiento en tiempo real.",
    "nombre": "Permite auditoría externa y validación de cumplimiento en tiempo real.",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "real in scripts/check-blindaje-real.ts"
  },
  {
    "id": "~13_PIPE_AUDITORIA_STRATO.md::Ejemplo de Flujo Completo::. Se extraen los features esperados desde los checklists.",
    "nombre": ". Se extraen los features esperados desde los checklists.",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "desde in scripts/generate-code.ts"
  },
  {
    "id": "~13_PIPE_AUDITORIA_STRATO.md::Ejemplo de Flujo Completo::. Se verifica si existen en el código.",
    "nombre": ". Se verifica si existen en el código.",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "verifica in scripts/validate-module.ts"
  },
  {
    "id": "~13_PIPE_AUDITORIA_STRATO.md::Ejemplo de Flujo Completo::. Se verifica si tienen tests y cobertura.",
    "nombre": ". Se verifica si tienen tests y cobertura.",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "tests in scripts/report-status.ts"
  },
  {
    "id": "~13_PIPE_AUDITORIA_STRATO.md::Ejemplo de Flujo Completo::. Se verifica si la lógica está implementada.",
    "nombre": ". Se verifica si la lógica está implementada.",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "est in packages/utils/src/add.test.ts"
  },
  {
    "id": "~13_PIPE_AUDITORIA_STRATO.md::Ejemplo de Flujo Completo::. Se fusionan los resultados y se calcula el score técnico.",
    "nombre": ". Se fusionan los resultados y se calcula el score técnico.",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "score in scripts/audit/extract-audit.ts"
  },
  {
    "id": "~13_PIPE_AUDITORIA_STRATO.md::Ejemplo de Flujo Completo::. El resultado puede visualizarse en el dashboard, exportarse o integrarse en CI/CD.",
    "nombre": ". El resultado puede visualizarse en el dashboard, exportarse o integrarse en CI/CD.",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "puede in scripts/init-project.ts"
  },
  {
    "id": "~13_PIPE_AUDITORIA_STRATO.md::Notas::El PIPE es extensible: puedes agregar más scripts, validaciones o integraciones según las necesidades del proyecto.",
    "nombre": "El PIPE es extensible: puedes agregar más scripts, validaciones o integraciones según las necesidades del proyecto.",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "PIPE in scripts/audit-module.ts"
  },
  {
    "id": "~13_PIPE_AUDITORIA_STRATO.md::Notas::Todos los scripts y outputs están versionados y auditados para máxima trazabilidad.",
    "nombre": "Todos los scripts y outputs están versionados y auditados para máxima trazabilidad.",
    "logica_verificada": true,
    "fuente_verificacion": "regex",
    "detalle": "Todos in packages/db-types/src/index.ts"
  }
]